#######################
Day 7 : 18th July 2025
#######################	



Scripting / Progamming Languages are used to handle ?


Building Blocking!


	Purpose of Scripting :
	
	IT Services :::
	
	=> Data ?
	
	What is Data ?
	
	Information about the Application ?
	
	Any Information ?
	
	Any Input Data ?
	
	Information :
	
	What is Information ?
	
	
		-> Data : 			It is just a raw text - without any meaning!
							
							India !
							
		-> Information :	Processed Data becomes Information.
		
							India is a Country !
							
							
	Programming Constructs!
	
	
	Variable :
	
		x = 10;
		y = "afasdf"
		z = 12.4
		a = Yes/No == 0/1
		

	DataTypes :
	
		int 		x = 5 
		string 		
		char		c = 'a' 
		float 
		
		String 		Stud_Name1 = "xyz"
		String 		Stud_Name2 = "xyz"
		String 		Stud_Name3 = "xyz"
		String 		Stud_Name4 = "xyz"
		String 		Stud_Name5 = "xyz"


		Array 
		
			String Stud_Name[100]
			
				Stud_Name[5] = [asdf1,asdf2,asdf3,asdf4,asdf5]
				
					Index 		0,1,2,3,4
					
					
					Stud_Name[3] ==> asdf4
					
					
		Input Stream :
		
		  Accept x;
		  
		  Stud_Name[5] --> 
		  
		  
		  Looping Constructs --> for loop, while,...
		  
		  
		  Accept Stud_Name = 234234234
		  
		  Accept Month ==> 12 possible values  ==> lasdfalskflsdf
		  
		  Conditional Statements :
		  
			If 
			
			If then else 
			
			If then else if 
			
			nested If 
			
			
			Switch case statements 
			
			
			Month == "Jan"
			
			
			Operators !
			
			
			Stored in a Volume in the form files!
			
			Handle the Files --> Create,write,read,update,delete 
			
				json files ==> Key:Value Pairs 
				
				Yaml Files ==> Key:Value Pairs 
				
			Handle Database! 
			
				MySQL/Oracle DB 
				
				mongodb
				
				
			Functions :	
			
				write_file()
				{
				}

	
	Data !
	
	What is Data ?
		- Is just a raw fact - without any meaning! 
		
		INDIA  - Is just raw text - without any meaning!
		
	Information ?
		- The Processed Data.
		
		- INDIA is a Country 
		
		
	Declare the 
	
		Variable Name :
		
			x = 5

			y = "IND"
		
		Data Type : Numeric / Char / String of Chars		
		
		variable :
		
			student_name : "zzz" , "xxx", "yyyy"
			
			student_name = "xxxx"
			
		Array :
		
			student_name[5] : {"zzz" , "xxx", "yyyy", "xxx", "yyyy"}
			
			
		Data Validation :
		
			Conditional Statements :
			
				IF Conditions 
				
					If else 
					 
						If else-if 
						
							Nested If Conditions 
							
			
				Switch Case Statement : To validate the exepected list of data 
				
				
				Email_ID : ****@gmail.com
				
					
						Email_ID == ****@gmail.com
						
			
			Operators : 
			
				==, != , > , <, <=, >= 	
				Arithmetic Operators 
				
				Logical Operators 
				
		Array :
		
			student_name[5] : 	{"zzz" , "xxx", "yyyy", "xxx", "yyyy"}	
						0	1	2	3	4
								
				student_name[0] = "zzz"
				
				student_name[4] = "yyyy"
				
			Looping Constructs :
			
				Used to perform some process iteration.
			
					for loop 
					
					while
					
					do-while 
					
			
		Functions :
		
			- Set of Instructions which are executed repeatly to perform some task within the application
			
			Pre-Defined Functions 
				- String/Math function
				
			User-Defined Functions 
				- Based on Buisness Logic 
				
				
		File Handling :	
			
			- Sequential Files

			- Using the files we can have the un-organized data in a sequential form
			

	Eg.: 	
	mkdir scripts 
	cd scripts
	
	vi config-build-tools.sh					# Create Shell Script File
		
		#!/bin/bash
		#
		sudo apt install jdk_11	-y   
		sudo apt install maven 	-y	
        sudo apt install docker.io -y
		
	save
	
	chmod 755 config-build-tools.sh
	
	./config-build-tools.sh						# Run/Execute the Shell Script
	
	sh config-build-tools.sh					# Run/Execute the Shell Script

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to print Hello World on terminal using echo command

Source Code:

#!/bin/bash
#
echo "Hello World"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to print the calender month by default.

Source Code:

#!/bin/bash
#	     
echo "The Month is"
cal # cal command displays current month by default

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to read user input and perform operations with them.

Source Code:

#!/bin/bash
echo -n "Enter number 1 : " # -n option supresses newline
read NUM1 # Read the user input from Standard Input and store in Variable NUM1

echo -n "Enter number 2 : "
read NUM2

SUM=$(($NUM1 + $NUM2)) # Arithmetic expansion using double parentheses
echo "The sum is $SUM"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show usage of if condition

#Operators :: 6 Operators

Source Code:


#!/bin/bash

NUM1=5 # variabe assignment
NUM2=2

if [ $NUM1 -gt $NUM2 ] # -gt is to test integer numbers
then
    echo "NUM1 > NUM2"
fi

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show usage of if else condition

Source Code:

#!/bin/bash

NUM1=2 # Variabe assignment
NUM2=5

if [ $NUM1 -lt $NUM2 ]  # -lt is to test intiger numbers
then
    echo "NUM1 < NUM2"
else
    echo "NUM1 > NUM2"
fi

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show usage of else if condition

Source Code:

#!/bin/bash
#

echo -n "Enter a number: "
read NUM

if [ $NUM -gt 0 ]
then
    echo "$NUM is +ve"
elif [ $NUM -lt 0 ]
then
    echo "$NUM is -ve"
else
    echo "$NUM is 0"
fi

echo "done"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to demonstrate case statement

Source Code:

#!/bin/bash

echo -n "Enter a character: "
read CHAR							#  a,e,i,o,u l, A

case $CHAR in
	a) echo "You entered $CHAR which is a vowel";;  # ;; Terminates each option
	e) echo "You entered $CHAR which is a vowel";;
	i) echo "You entered $CHAR which is a vowel";;
	o) echo "You entered $CHAR which is a vowel";;
	u) echo "You entered $CHAR which is a vowel";;
	*) echo "You entered $CHAR which is not a vowel";; # Defaults to everything else
esac

echo "What if you enter upper case letters!!?, Check the next example"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to demonstrate case statement

Source Code:

#!/bin/bash

echo -n "Enter a character: "
read CHAR

case $CHAR in
	a | A) # Test for both Lower or Upper case letter
		# You may write commands in this fashion too!!, means multiline commands
		echo "You entered $CHAR which is a vowel"
		;; # Terminates each option
	e | E) 
		echo "You entered $CHAR which is a vowel"
		;;
	i | I) 
		echo "You entered $CHAR which is a vowel"
		;;
	o | O) 
		echo "You entered $CHAR which is a vowel"
		;;
	u | U) 
		echo "You entered $CHAR which is a vowel"
		;;
	*)  # Defaults to everything else
		echo "You entered $CHAR which is not a vowel"
		;;
esac

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to show usage of logical operators

Source Code:

#!/bin/bash

echo -n "Enter a NUM: "
read NUM

# Check whether a number is between 10 and 20 (Using AND -a operator)
if [ $NUM -ge 10 -a $NUM -le 20 ]
then
    echo "$NUM is between 10 and 20"
else
    echo "$NUM is NOT between 10 and 20"
fi

echo -n "Enter another NUM: "
read NUM

# Check whether a number is between 10 and 20 (Using OR -o operator)
if [ $NUM -lt 10 -o $NUM -gt 20 ]
then
    echo "$NUM is NOT between 10 and 20"
else
    echo "$NUM is between 10 and 20"
fi

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to show usage while loop

Source Code:

#!/bin/bash
#

COUNT=0

while [ $COUNT -lt 5 ]
do
    echo "Loop count is ${COUNT}"
    COUNT=$((COUNT + 1))
done

echo "Done"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Sum of N natural numbers using while loop

Source Code:

#!/bin/bash
#

echo -n "Enter a number: "
read NUM

let SUM=0; 
let I=1
while [ $I -le $NUM ]
do
	SUM=`expr $SUM + $I`
	I=$((${I} + 1))
done

echo "The sum of the first $NUM numbers is: $SUM"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to demonstarte for loop [ Bash syntax ]

Source Code:

#!/bin/bash
#

COUNT=0

for i in 0 1 2 3 4
do
    echo "Loop count is ${COUNT}"
    COUNT=$((COUNT + 1))
done

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A simple script to demonstarte for loop [ C syntax ]

Source Code:

#!/bin/bash

COUNT=0

for ((i = 0; i < 5; i++))
do
    echo "Loop count is ${COUNT}"
    COUNT=$((COUNT + 1))
done


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show the usage of command line arguments, Here we access positional arguments using $1, $2 â€¦

Source Code:

#!/bin/bash

echo "Total no. of argument: $#"

echo "Program name: $0"
echo "1st argument: $1"
echo "2nd argument: $2"
echo "3rd argument: $3"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 A script to show the usage of command line arguments, Here we access arguments by iterating over $@

Source Code:

#!/bin/bash

echo "Total no. of argument: $#"
echo "Argument list: $@" # Commonly used
echo "Argument list: $*"

# Iterate over arguments ($@)
for ARG in $@
do
    echo $ARG
done
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show the usage of function

Source Code:


print_hello

#!/bin/bash

# Function definition
function print_hello()
{
    	echo "====="
    	echo "Hello"
    	echo "====="
}

# Call the function - print_hello
print_hello

print_hello
print_hello
print_hello
print_hello

	Functions / Methods :
	
		- Functions are set of instructions used repeatly within the application
		
		- Meant for Code reusalbility


install jdk :::


apt install openjdk-17-jdk


Goto /usr/lib/jvm/ 

vi /etc/profile 

export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64/bin"
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to show the usage of function and how to pass arguments

sample1.sh

#!/bin/bash
num1=$1
num2=$2

num3=$num1 + $num2

num3=$1 + $2 + $3 

echo $num3 

sh sample1.sh 34 45 43

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A script to demostrate usage of sed command

Source Code:

#!/bin/bash

# Basic text substitution using sed
echo "Bash Scripting Bash Language" | sed 's/Bash/Perl/'
