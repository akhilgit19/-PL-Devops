Introduction to Cloud:
============================
   - Devops Projects:
      ---> Use this project in reusme
                - Banking/ Retails     ====> Phase 1 - ( Here you will be using defulat vpc, subnets)

      ---> AWS Cloud Services          =====> Phase 2 - ( Here you will create a dedicated vpc,subnets, routetables, intergetatway)
                                             within the private network you will deploy through jenkins and implement your services using kubernetes
                                             by  the help of load balancer.


#########################
Day 33 : 4th Sep. 2025
#########################

	AWS Solution Architect Associate Level!
=============================================	
	Introduction to Cloud :::
		What is Cloud Computing?
		- If you want to avail , servers ,databases ,storage,networking from internet instead of onpremsis

    why is cloud computing important?
    - faster service provisioning
      dynamic scalability
      good reliablitiy
      cost effective 
      higher productivity 
      efficient performance
      high security


Different Cloud Computing Service Modes:


 On premise             Infrasctureas a service           platform as a service      software as a service
===========            =========================          =====================       =======================
applications            applications                        applications              applications
data                    data                                 data                     data
runtime                 runtime                  ==========  runtime                  runtime
middleware              middleware                            middleware              middleware
o/s                     o/s                                   o/s                     o/s
virtualization          ==========virtualization              virtualization          virtualization
servers                           servers                     servers                 servers
storage                           storage                      storage                 storage
networking                        networking                   networking             networking




1.public cloud
2.private cloud
3.hybrid cloud
4.community cloud


AMS - AMAZON Web services
=============================================
- Benefits of AWS
   -  Easy to use
   -  scalable and provides high performance
   -  dominant market position
   -  cost efective
   -  reliable
   -  secure
   -  flexible
   -  can support large organization


AWS Services

       1. Compute - EC2, Amazone ElasticBeanstalk, Amazon lambda, Amazon scaling, Elastic load balancer
       2. Storage and content delivery - amazon ebs, amazon efs, amazon s3, amazon glacier,
                                       amazon storage gateway, amazon cloudfront
       3. Networking - amazon vpc, aws direct connect , amazon route s3
       4. database- amazon rds , amazon dyanmo db, amazon elasticcache, amazon redshift
       5. managment tools- amazon cloudwatch, aws cloud formation, aws cloud trail, aws trustadvisior
       6. security and identity - aws idently access management (IAM), aws key managemnt service(KMS)
       7. Application services- amazon ses , amazone sns, amazon sqs , amazon swf
       8. developer tools- codepipeline, code deploy, code build , code commit


 Services Comparision: AWS , AZURE   and GCP

  AMAZON AWS            MICROSOFT Azure        GCP
=========================================================
   S3                   Blog storage          storage
   EC2                  Virtual machines      compute engine
   ec2 container serv    container service     kubernetes engine
   elastic beanstalk     cloud service         app engine
   dynamodb              cosmos db              bigtable
   redshift              sql databse            bigquery
   lambda                azure functions        cloud functions
   dynamo                cosmos db              cloud datastore



AWS Global infrascture
==========================
- aws regions
    - aws has regions all around the world
    - names can be us-east-1 eu-west-3
    - a region is a cluster of data centers
    - most aws services are region scoped
   -  How to choose an aws regions
    1 compliance with data goverance and legal requirements: data never leaves a region without 
      your explict permission
    2 proximity to customers reduced  letency
    3 available services within a region: new servers and new features arent' available in every region
    4 pricing: pricing varies region to region and is transparent in the service pricing page


- aws availabitiy zones:
    - Eachi region has many availablity zones
       (usualyly 3 min is 3 max is 6)
     example ap-souteast-2a, ap-souteast-2b, ap-souteast-2c
    - each avaialbity zone is one or more discrete data centers with redundant powers
      networking and connectivity
    - they are separate from each other so that they are isolated from disasters
    - they are connected with high bandwidth, ultralow latency networking

- aws data centers
 
- aws edge locations/ points of presence
  - Amazon has 400+ points of presence (400 + edge locations & 10+ regional caches)
    in 90+ cities across 40+ countries
  - content is delivered to en uses with lower latency


		IAM Services
		- 
		EC2 Services 
		
		

		
Next :

	IAM Service Demo
	EC2 Service!
	
	
########################
Day 34 : 5th Sep. 2025
#########################		
	
	- IAM Services :

	https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html


    - IAM user and groups
      - IAM = Identy and access managmentl, global service
      - root account created by defulat shouln't be used or shared
      - users are people within organization and can be grouped
      - groups only contain users, not other groups
      - users dont have to belongs to a group and user can belong to multiple groups

    - IAM : Permission
      - users or groups can be assigned json documents called policies
      - These policies define the permission of the users
      - In AWS you apply the least privilege prinicple dont give more permission tha a user neede

    - IAM Policies structure
      - consists of 
         . versions: policy language version, always include 2012-10-17
         . id: an identifier for the policy 
         . statement: one or more individual statements
      - statements consits of
         . sid: and identifier for the statement
         . effect: wheather the statement allows or denies access 
         . prinicpal: account/users/role to which this policy applied to 
         . action: list of actions this policy allows or denies
         . resouce: list of resouces to which the actions applied to 
         . condition: conditions for when this policy is in effect

     - How can users access AWS.
         . To access AWS, you  have three options
           - AWS Managment console( Protected by  password + MFA)
           - AWS command line interface (CLI) protected by access keys
           - AWS software Developer Kit( SDK) for code protected  by access keys
         . Access keys are generated through the AWS console.
         . users manage their own access keys
         . Access keys are secret, just like a password, Dont share them
         . Access key id = username
         . secret accesskey = password

     - IAM: MFA device options in AWS (optional)

      - How can users access AWS

			- AWS Console 
			
			- AWS Cli 
			    https://github.com/aws/aws-cli
                https://docs.aws.amazon.com/cli/latest/userguide/cli_code_examples.html
			- AWS SDK
               - AWS software development kit( AWS SDK)
               - language speicfic API's ( set of libraries)
               - enables you to access and manage AWS services programmatically
               - embedded within your application
               - supports 
                      - SDK's( javascript, pythong, pHP NET, Ruby java, Go nodejs c++)
    - IAM Roles for services
       - Some AWS service will need to perform actions on your behalf
       - To do so we will assign permission to AWS services with IAM roles
       - Common roles 
           EC2 instance roles
           Lambda function roles
           roles for cloud formation

    
	- Create IAM User 
           - In aws console, Go to IAM, click on users, click on create user,username - plappuser1
           - choose (provide user access to the AWS Management console)
           - choose (i want to create an IAM user)
           - console password  choose custom password
           - choose ( user must create a new password a next sign)
           - click on next
           - In permissions options- attach policies direclty and you can choose admin access
           - or
	- Create User  Group 
           -  you can choose add user to group 
           - usergroup name -plgrp1 and choose admin access
           - select the group and  click on create user
           - download the .csv file
	- Policies
		   - click on policies, click on create policy, click on json and you can update and create policy 
             or from visual you can use like s3  add all like read,write,
             click on resource and you can add your specific resource
	- Roles 
           - For roles, if user wants to login to ec2 and acces file through s3 buckets. IAM role is required here
             - choose aws service, choose ec2, choose s3 fulladmin access
             - role name pl-ec2-s3-iam-role1
             - click on create role
             - now go to the ec2 instance dashboard, 

    - Access the s3 bucket through EC2
      - while creating EC2 instance Name
      - AMI
      - advanced details, IAM instance profile you should be seeing this role - pl-ec2-s3-iam-role1
         
	- Security Credentials 
	    - click on usee plappuser1, if you click on permission, you can see ppolicies
          adminstrator access,awscodebuildadmin access, aws code commit full access, 
          aawscodedeployfullaccess,awscodpipelinefullaccess, iamuserchangepasswword
        - you can click on security credentials, you can see MFA and assign MFA  to the user

    - Access reports :
        - if any user is not active for long they can be removed from the access gropu and it's a paid service

    - Billing and cost management home
       - cost summary
       - cost breakdown
       - bills
       - free tier
       - pricing caluclator - based on container services, monitoring services, database  services
         - workload estimate like if you say if you a customer is approaching us to implement devops, we can give the estimate manpower  analysisi
           but not the cloud service estimation it should be discussed with wendor and customer
    - Cost and usage analysis
    - aws well architectured tool
      

			
	- Associate / 
	
	
	- RBAC ::::
	
		Manager 		=> DevOps / Develop / Security / Storage / Networking 
		
		Lead 
		
		Associate 

-  EC2 Service
   - ec2 is one of the most popular of AWS offering
   - ec2 -elastic compute cloud- infrastructre as a service
   - it mainly consits in the capability of
        - renting virtual machine ec2
        - storing data on virtual dirves( ebs)
        - distributing load across machines( elb)
        - scaling the services using an auto - scaling group (ASG)
-  EC2 sizing and configuration
  - operating system(os) linux windows or mac os
  - how much compute power and cores (CPU)
  - how much random access memory (RAM)
  - how much storage space:  
       Network attached ( EBS and EFS)
       Hardware( ECE instance sotre)
  - network card: speed of the card public ip address
  - firewall rules: security grouop
  - bootstap  script( configure a first launch EC2 user data
- EC2 user data
  - it is possible to bootstrap our instances using an EC2 user data script 
  - bootstrapping means launching commands when a machine starts
  - that script is only run once at the instance first start
  - ec2 user data is used to automate boot tasks such as 
       - installing upates
       - installing software
       - downloading common files from the internet
       - anything you can think of
  - EC2 user data script runds with the root user
- Ec2 instance types- Overview
  you can use different tpes of ec2 instances that are optimised for different use cases
- AWS has the following naming convention
    m5.2* large
     m: instance class
     5: generalring
     2*large: size within the instance class
    m class- general purpose - t2
                - Great for a diversity of workloads such as webservers or cod repositories
                - balance between - compute, memory, networking
                
             compute optimized - c6gn
                - require for high performance
                - batch processing workloads
                - media transcoding
                - high performance webservers
                - hgih performance computing HPC
                - sicientfiic modelling  and machine learning

             memory optimized - R6g
               - for business intelligenece such as  memory datbases optimixed for BI
               - applications performing real time processsing of gbig unstructured data

             accelerated computing 
               - 
             storage optimixed
             HPC optimixed
             instance features
             measuring instance performance

 Instance      vcpu     Network performance   memory GIB
 t2.micro       1         low to moderate      1
 t2.xlarge      4          moderate            16 
 5d.4xlarge     16         upto 10 gbps        32
 r5.16xlarge    64          20 gbps            512
 m5.8xlarge     32           10 gbps           128


- Security groups
    - security groups are the fundamental of network security  in AWS
    - They control how traffic is allowed into or out of our ec2 instances
    - security groups only contain allow rules
    - security groups rules can reference by OP or by security group

    - can be attached to multiple instances
    - locked down to a region /VPC combination
    - does live outside the EC2 if traffic is blocked ec2 wont see it
    - it's good to maintain one separate security group for SSH access
    - if your application is not accssible (timeout) then it's a security group issue
    - if your application give a connection refused error then its an application error or it's not launched
    - all inbound traffice is blocked by defualt 
    - all outbound traffic is authorised by defualt 

Classic Ports to know
22 = ssh (secure shell) log inot a linux instance
21 = ftp (file transfer protocol) upload files into a file share
22=  sftp (secure file transfer protocol) upload files using gssh
80=  http (Acess unsecured websites)
443= https- (access secured websites)
3389= RDP(Remote desktop protocol) log inot windowns instance


Ec2 Instances Purchasing options
- on demand instances short workload, predictable pricing pay by second
- reserved( 1 and 3 yerrs)
   - resserved instances long workloads
   - convertible reserved instances - long workload with flexible instances
- savings plans (1 & 3 years) commitment to an amount of usage long wworkloads
- spot instances- short workloads chearp can lose instances( less reliable)
- dedicate hosts- book an entire physical server,control instance placements
- dedicated instances- no other customers willl shareyour hardware
- capacity reservations- reserve capacity in a sepcific AZ for any duration



#######################
Day 35 : 8th Sep. 2025
#######################

	EC2 Services!	

		VM - Jenkins_Server 

		AMI :	AMI contains the operating system, application server, and applications for your instance.
		 - Create an AMI and Copy to any target Region.
	     - select the instance, click on actions, click on image and templates
         - launch template name, template version , instance type, keypair, 
         - network setting
         - click on create image
         - image name - PL-BS-AMI-1
         - Reboot instance by defualt
         - instant volumes , Size -8
         - click on create image
         - In the images, you can see AMI's,
       Using AMI we can create EC2:
         - In ec2 create my AMI - PL-BS-AMI-1
         - launch test-server 1
         - instance type- t2 micro
         - keypair 
         - click on ec2 instance
       copy AMI
        - click on the ami, click on actions, click on copy ami
        -  ami copy  name -PL-BS-AMI-1
        - destination region  asia pacific (singapore)
        - choose copy tags

      Security groups
        - launch instance -
        - ami ubuntu
        - instance type t2.micro
        - key pair 
        - networksetting 
        - create security group - edi inbound rule 
        - custom tcp 8080 source allow all
        - type ssh , custom source allow all
      Allocate Elastic ip address
        - click on ec2 , click on elastic bip address
        - click on allocate elasti ip address
          - Publick IPv4 address pool
          - amaon pool of ipv4 address
          - network border group( choose your network availablitiy zone)
            ap-south-1
          - click on allocate
    placement group: for tightly coupled we use placement group

			OS -> Ubuntu 
			
		Server Templates ::::		
		- 
		Docker :::
		
			Containers				VM  
			
			Images 					AMI 
		
		
	EBS Volumes ::::
	
		- Elastic Block Store !
		- you can attach or dettach the volume or modify the volume
    snapshots
         - click on create snapshot
         - give the volume id
         - now click on create snapshot
         - select snapshot, click on actions, click on create volume from snapshot

     Loadbalancer
         Target group--- The request is sent to  target server uses round robindmethod


	EFS Volumes ::::
	    
	S3 ::::
	  - Amazon s3 allows people to store objects)(files) in buckets(directories)
      - buckets must have a globally unique name( acorss all regions all accounts)
      - buckets are defined at the region level
      - s3 looks like a global service but buckets are created in a region
      - Naming convention
           . No uppercase, No underscore
           . 3-63 characters long
           . not an ip
           . must start with lowercase letter or number
           . must not start with the prefix xn
           . must not end with the suffic -s3alia
	   - objects(files) have a key
       - the key is the full path
           . s3://my-bucket/my_file.txt
           . s3://my-bucket/my_folder/another_folder/my_file.txt
       - key is composed of prefix + object name
           . s3://my-bucket/my_folder/another_folder/myfile.txt
       - There's no concept of directories within buckets
       - Object values are the content of the body
           . Max object size is 5 TB ( 5000 TB)
           . If uploading more than 5 gb must use multi-part upload
       - Metadata( list of text key /value  pairs- system or user meta data)
       - tags
       - version ( if versioning is enabled)

    S3 Bucket Policies
     - JSON based policies
          . Resources: buckets and objects
          . effect: allow / deny
          . actions: set of api to allow or deny
          . principal: the account or user to apply the policy to
     - Use s3 bucket for policy to:
          . Grant public access to the bucket
          . force objects to be encrypted at upload
          . Grant access to another account( Cross account)

     Creation of bucket
      - click on create bucket 
      - bucket type - general purpose 
      - bucket name - ol-temp-bkt1
      - object ownership 
     Block public access setting for this bucket
      - disable block all public access 
      - acknowledge this 
      - bucket versioning - disable
      - tags
      - default encryption 
      - advanced settings 
         - disable 
      - Click on create bucket, now you can upload files to your bucket

    Amazon S3 Static Website Hosting
     - S3 can host static websites and have them  accessible on the internaet
     - the website URL will be ( depending on the region) 
        http://bucket-name.s3-website-aws-region.amazonaws.com
         or
        http://bucket-name.s3-website.aws-region.amazonaws.com
     - if you get a 403 forbidden error, make sure  the bucket policy allows public reads

     s3 - versioning
     - you can version your files in amazon s3
     - it is enabled at the bucket level
     - same key oeverwrite will change the version:1 ,2,3
     - it is best practice to version your buckets
        . protect against unintended deletes( ability to restore a version)
        . easy roll back to previous version
     - Notes:
         . Any file that is not versioned prior to enabling versioning will have version " null"
         . Suspending versioning does not delete the previous bversions

    s3 durabliity and avaialbility 
      Durability
          - high durability (999.9999 % ) of objects across multiple AZ
          - If you store 10,,000000 objects with amazon s3 you can on average  expect to incur a loss of a single object once eveery 100,000 years
          - same for all storage classed
      Avaialbility 
          - Measures how readily avaialbe a service is
          - varies depending on storage class
          - example s3 standard has 99.999% avaialbitliy = not avaiable 53 min  a year




      
	AWS CodeCommit ==> Distributed VCS in AWS.
	
	
	Use S3 Buckt to host static web appln. 


#######################
Day 36 : 9th Sep. 2025
#######################

	S3 
	
	Volumes 
	
	Dbase Services 
	
	Networking :
	
		VMs - dedicated VPC
		
		
	EC2 Instance -> AMI 
	
		-> Kubernetes / Jenkins / Ansible - AC / Target Nodes -> Provision
		
		-> Configure Kube_WN1 ->		


- launch ec2 instance
- PL- Webappserver
- AMI- amazon linux 2023 kernel -6.12 AMI
- Instance type t2 micro
- keypair
- networksetting -  
  - create security group 
  - allow ssh, http
- storage - 8 gb
- Advanced details
- UserData :
	
	#!/bin/bash
	yum update -y
	yum install -y httpd
	systemctl start httpd
	systemctl enable httpd
	echo "<h1>Hello! You accessing web server - $(hostname -f)</h1>" > /var/www/html/index.html
	
- launch the instance


Database services
------------------------------
- Databases- Aurora and RDS- click on create database
- instance cype db.rg.2x large 
- availablity and durability 
- Templates
   - production, dev/test, free tier
-

Migration services
-  Database Migration service

Aurora and RRD
------------------------------
Choosing the right databse:
 - we have a lot of managed databases on AWS to choose from 
 
questions to choose the right database based on your architecture:
 - Read-heavy, write-heavy or balanced workload? throughtput needs? will it?
   change, does it  need to scal or fluctuate during the data?
- how much data to store and for how long? will it grow? average object size?
  how are they accessed?
- data durability? source of truth for the data?
- latency requirements? concurerent users?
- data model? how ill you query the data? jjoins? structeured?
 semi-structured?
- strong schema? more flexibility? reporting? sear? RDSBMS/ NOSQL?
- License costs? switch to cloud native DB such as aurora?

Amazon RDS - Summary
------------------------------
- Manageed PostgreSQL/MQL/Oracle/SQL Server/ DB2 /MairaDB/ Custom
- Provisioned RDS Instant size and EBS volume type and size
- autoscaling capability for storage
- suppport for read replicas and multi az
- security through IAM security groups KMS, SSL in transit
- automated backup with point in time restore feature
- manual  DB snapshot for longer term recovery
- managed and scheduled mainteannce
- support for IAM authentication, integration with secrets amanagers
- RDS custom for access to and customizee the underlying instance


EBS Volume
---------------
-  An EBS( Elastic Block store) volume is a network drive you can  attache to your instances while they run
- it allows your instances to persist data, even  after their termination
- They can only be mounted to one instance at a time( at the  CCP leevel)
- They are bound to a specific availability zone

- Analogy: This of them as a network USB stick
- Free tier: 30 GB of free EBS storage oft type general purpose(SSD) or magnetic per month

EBS Volume
---------------
- Its a network drive ( not a physi al dirve)
   . it uses the network to communicate the isntance, which means there mimght be a bit of letency
   . it can be detached from an EC2 isntance and attached to another one quickly
- it's located to an avaialbitliy zone( AZ)
   . An EBS volume in us-east-ia cannot be attached to us-east-1b
   . to move a volume across you first need to snapshotit
- Have a provisioned capacity( size in GBS and IOPS)
   . You get billed for all provisioned capacity
   . you can increase the capacity of the drive over time
- you can create a snapshot of the volume
  EBS Snapshots:
 - Make a backup(snapshot) of your EBS volume at a  point in a time
 - No necessary to detach volume to do snapshot but recommened
 - can copy snapshots across  AZ or region

Note:
One EBS volume can be attached  to 16 EC2 instances


 EBS Encryption:
------------------------------
 - When you create an encrypted  EBS volume you get the folowing:
   . Data at rest is encrypted inside the volume
   . All the data in fligh moving between the instnace and the  volume is encrypted
   . all snapshots are encrypted
   . all volumes created from the snapshot
 - Encryption and decryption are handled transparently
 - Encrypting has a minimal impact on latency
 - EBS Encryption leverages keys from KMS( AWS-256)
 - copying an unencrypted snapshot allows encryption
 - snapshots of encrypted volumes are encrypted

Amazon EFS Elastic File system
---------------------------------------------
- Managed NFS( network file system) that can be mounted on many EC2
- EFS works with EC2 instances in multi a-z
- Highly available, scable, expensive( 3xgp2 
  pay per use

- click on EFS 
- name 
- VPC 
- Recommeneded settings
   
	192.168.0.0/16	==> Home 
	
	172.0.0.0/16	==> AWS Default VPC 
	
	10.0.0.0/16		==> For any Big Network
	
	Networking :
	
		VMs - dedicated VPC
		Subnet :
			- Public Subnet & Private Subnet
			
			EC2 Instance using IAM Role and S3
			
		Route Table 
		Route Table Asso.
		Internet Gateway

AWS Networking
------------------
docs.aws.amazon.com

Amazon VPC


Traditional On premisis network
=================================
 Internet

-  Router

Switch       Switch
LANA          LANB

A    B            C

- Terminal a to b if you want to communte , The communication will be done thru lan network
- Now if you want to connect terminal b in lan a to terminal c in Lan b is done thr switches
- switches acts as a single point of communication to the LAN
- if you have more lans , switch acts as an interface between lan and routed
- Router distributes the routing request from one switch to another switch


Physical Network:
-------------------------------
Router

hub  or switch

terminals


AWS VPC
---------------
subnet A subnet B
EC2  Router   EC2
AZ1          AZ2

- How do i compare physical network to AWS VPC(clOUD)
- lAN network can be compared to subnet
- workstations can be compared to ec2, So a subnet can have n number of ec2 instances
- In phsyical network, lan is connectied to swtich which conummincates to another lan via switch 
- In AWS Vpc , routers  are used to route the request from one aubnet to another subnet
- In aws vpc, application is enabled to the intergateway which is exposed to external network
- The router and internetgateway is attached through routetable association
- subnets can be public and private subnets, public subnets are exposed to internetgateway
- Example 3 teir application architecture, user application can be hosted in public subnet
- application and database can be attached in private subnet
- Through NACL, we can enable firewall protection to subnets
- Security Group  access the EC2  instance protection 


1 Region-= Multiple Availability Zones:
Now AWS in 32 region and 102 availability zones

VPC sc0pe with repsect to AWS account,region and AZ;
=====================================================

- once we create an account we will choose regions like mumbai tokyou or n virginia
- once we choose the region we will prepare VPC in respective region level
- each region as availability xones az1 az2 az3


                aws account 
                        |
------------------------------------------------------
  |                     |                          |
Mumbai               tokyo                   n virginia
region1             region2                  region3
 
vpc                  vpc                        vpc   
                     vpc                        vpc   
                     vpc   


az1 az2 az3        az1 az2 az3 az4              az1 az2 az3 az4 az5 az6


- I can create a VPC and link all the 3 avaialbility zones. scope of your services
  will be account level ,region level and vpc level

                aws account IAM route53
                        |
------------------------------------------------------
  |                     |                          |
Mumbai               tokyo                   n virginia
region1             region2                  region3
 
vpc elb                 vpc                        vpc   
ec2 rds               vpc                          vpc   
sub sub               vpc   


az1 az2 az3        az1 az2 az3 az4              az1 az2 az3 az4 az5 az6


             
AWS Services scope with respect to VPC
---------------------------------------------
- if you observe, once you create an account at account level , IAM, route53 willbe in global service region
- similarly if you create an any s3 bucket or dynamodb will be in region level
- same way if you create an vpc or elb can be associate with subnets
- in each and every subnets we will deply our ec2 rds rousources
- subnets is process of spliting vpc into various partitions
- once i splits into multiple subnets we can host multiple resources
- we can maintain subnets for ec2, rds resourcess
-  there is an option to avail multiple az to vpc

VPC building blocks Architecture
---------------------------------------------
- CIDR
- subnets
- routetables
- security groups
- network acl
- internet gateway
- vpn Gateway
- Domain name server
                             internelt

| -----------------------------igw--------------------------------------------------
|  |----------------------------------------------cidr 10.0.0.0/16---------------------------------
|  |vpc           
|  |  ---------------             -------------------
|  |  |              |             |              |
|  |  |   Subnet A   |             |  Subnet B    | 
|  |  |              |             |              |
|  |  |   EC2        |  Routeer    |    RDS       |
|  |  |              |             |              |
|  |  |              |             |              |
|  |  |              |             |              |
|  |  ----------------             ------------------
|  |  CIDR 10.0.0.0/24             CIDR 10.0.1.0/24
|  |-------------------------------------------------------------------------------
|   availabiy zone 1               availabitliy zone 2
-------------------------------------------------------------------------------
vgw
^
| vpn or direct connect 
|
CGW
^
|
Data Center 

-------------------------------------------------------------------------------
- So once we create a VPC we will be creating a subnet
- while creating subnet CIDR range is imp parameter, it is used to assign the IP address
- CIDR, Class less interdomain routing
- Example, using CIDR we can able to choose or assign the ip address to subnet level
- if you create a vpc you can able to set the CIDR range 10.0.0.0/16
- /16 going to decides how many ip address can be set to this VPC
- same thing can be looked for subnet level
- Once subnet is defined if you maintain any communication to another subnet
  is by router through routetables
- Security groups decides incoming and outgoing traffic of ec2 leavl
- Network acl maintains firewal at subnet level  
- we cannot rely on ip address we rely on Domain name system, ;let say im running  a web application,
  i dont need to enter my ip address i can easly access by DNS
- VPN gateway provided secured encryption communication 
- some of applications are in onpremisis i want the data to be used in cloud,
  how my onpremisis can connect to cloud is VP or dirrect connect .
- on premissing we will have Custermer gateway and in cloud we will have virtual gateway


Ip addressing Basics
------------------------------
- When ever users enters website address in browser, as soon as they hit the site, The dns
  server which check for entries of the domain name and associate IP address and routes to the target webeserver
-  DSN is just for end users understanding but actual communication is done by ip'
-  what if dns is not having any entry, it will go to the next level

            
class a 10.0.0.0 
       first address 10.0.0.1
       last address 10.2255.255.255
       total address=16777214
class b 172.16.0.0
       first address 172.16.0.1
       last address 172.16.255.255
       total address=55534

class 192.168.0.0
       first address 192.168.0.1
       last address 192.168.0.255
       total address=255

Private IP addresses
------------------------------
- There are server ranges of address reserverd for  private usuage as defined in RFC 1918

These are 
       CIDR              FirstAddress       Last address
 10.00.0/08              10.0.0.0          10.255.255.255
 172.16..0.0/12          172.16.0.0        172.31.255.255
 192.168.0.0/16         192.168.0.0        192.168.255.255


- Private addressed are not routable on the  Internet
- public ip address are allocated based upon vpc and cidr range
- private ip address are allocated based upon subnet and cidr range

VPC Addressing
---------------
- AWS VPC CIDR( IPV4)
  - VPC prefix between /16 (65536 ips ) and /28 (16 ips)
  - RFC 1918 ip ranges for private network and correspoding AWS recommended ranges
    . 10.0.0.0/8 =>172.16..0.0 -1712.31.255.255 AWS CIDR 10.X.0.0/16
    .172.16.0.0/12 => 172.16.0.0 -172.31.255.255 AWS CIDR 172.16.0.0/16 to  172.31.0.0/16
    .192.168.0.0/16 => 912.168.0.0 - 192.168.255.255 => AWS CIDR 192.168.0.0/16
 - subnet CIDR prefix between /16 TO /28 (same as VPC CIDR
- AWS VPC CIDR (IPV6)
  - VPC CIDR with prefix /56 (2^ 72 iPS)
  - IPV6 CIDR is allocated by AWS
  - Subnet CIDR prefix /64
  - IPV6 IP addresses are gloablly unique and publicly routable

- We can resue IPF4 but in IPV6 we can have glbally unique 

Subnets, Route tables and Internet Gateway:
------------------------------------------------------------
- So when ever we need to prepare any ec2, wee need to choose VPC autoamatically it identifies subnet, 
  within that subnet only we can create our ec2 instance 
- whenever we create subnet and vpc a routetable will be created,similarly when we create a subnet for that alos we will have
  routetable which will associate to internetgateway
- Once you update the internetgateway, it will be elgible for your internetaccess
- by defualt vpc communication withing the internal network if we want to expose to external applications it should be opened to internetgateway
- When you expose your main routetable thru internetgateway bydefualt your subnets alos exposed to internet
  but assume that i dont want to expose subnet internet, like public and private
  in that case we should have dedicated routetable for subnet a and subnet b

subnet a:
Destination            Target
10.10.0.0/16           local
0.0.0.0/0              Internetgateway


subnet b:
Destination            Target
10.10.0.0/16           local

Routetable
---------------
- it contains rules to route the traffic ,in/out of subnets
- Main route table at VPC level
- custom route table at subnet level
- each route table contains default immutable local route for VP
- if no custom route table is defined then new subnets are associate with main route table
- We can also modify the main route table

public subnets
---------------
 - has route for internet
 - instances with public ip can communicate to internet
 - ex NAT, Webservers, load balancer

Destination   Target
172.31.0.0/16   local
0.0.0.0/0       igw-xxx

Region   
       IGW
          VPC 
             AVAILABILITY ZONE 1     AVAILABILITY ZONE2
                      PUBLIC SUB         PRIVATE SUBET

1 Subnet == 1 az

Private subnet
------------------------
 - no route to internet
 - instances receive private IP
 - Typically uses NAT of instance to have internet access
 ex database, appserver

Subnets - good to know
------------------------
- aws reservers 5 ips address( first 4 and last 1 ip address)  in each subnet
- these 5 ip are not avaialble for user and cannot be assigned to an instance
- example: if cidr block 10.0.0.0/24 reserer ips are
  . 10.0.0.0: Network address
  . 10.0.0.1 reserver by AWS for the VPC router
  .10.0.0.2: Reserverd by aws for mapping to amaozon provided DNS
  .10..0.0.3: Reserved by aws for futur use
  .10.0.0.255: Network broadcast address. AWS does not support broadcast in a VPC
 therefor this address is reserved.

private IP 
------------
- private ip is assigned from the subnet rage

Public ip
------------
- public ip as assigned from the amazons pool of public ip
- public ip will change when you stop and start the instance

Elastic iP
------------
- Elastic ip is allocated  to your AWS account
- Remains allocated until released
- Does not change on instance stop/start
- can be remapped to another instance

IPV6 Addresses
------------------------
- AWS VPC alos supports IPV6 addressed
- IPV6 address is 128 bits in size with 8 blocks of 16 bits each
  example 
     2001:0db8:85a3:0000:0000:8a2e:0370:7334
- vpc cidr with prefix /56 (2^72 ips) ansd subnet cidr prefix /64
- ipv6 addresses are public and gloablly unique and allows resources to communicate with the internet
- vpc can operate in dual stack mode where vpc resources can commmunicate over IPV 4 or ipv6 or both
- IPV6 address persists when you stop and start your instances and is released whne you terminate your instance

Firewalls inside VPC
------------------------
NACL ,SG:
- IS a security allows acces to the subnet, once you reach subnet you will have security group
  Alows access to ec2
- nacl- Network access acontrol list
- SG- Security group

Security group
------------------------
- security groups are most basic, native and important firewall for EC2
- security groups has inbound and outbound rules
- security groups has only allow rules. does not support Deny blcok rules
- defualt security grouop in each VPC
- authorities traffic for both IPV4 and IPV6 traffic
- security groups and stateful
- you can reference another security group as a resource
- single security group can be attached to multiple instances
- single instance can have multiple security groups
- all inbound traffic is blocked by default
- all inbound traffic is authhorixed by defualt
- authorisies traffice for both IPV4 nad IPV6 traffice
- you can reference another securtiy group as a source

NACL
------------
- works at subnet level- Hence automatically applied to al instances
- contains both allow and deny rules, rules are numbered
-  rules are evaluated in the order of rule number (1 to 32766)
- stateless- we need to explicily open ports for return traffic
- defualt NACL allos all inbound and outbound traffic
- NACL are a greate way of block a speicif ip at the subnet level

SG V NACL
------------
SG                                                NACL
opeartes at ec2 instance or ENI level       Operates at subnet level
supports only allow rules                   supports both allow and deny rules
stateful- retrun traffic is allowed         stateless- return traffic needs to be in outbound rules
all rules are evaluated before making       rules are evaluated in the order
 a decision                                  and first matching rule is applied

NAT GATEWAY
---------------
- to enable internet access to ec2 instance , nat will be defined in the subnet and will
   be associated with ec2 instance and connected to interenet gateway
- Nategateway is completely aws managed services
- higher banwidth better availability no admin
- pay bu the hour for usage and bandwidth
- 5 gbps of bandwidth with automatic scaling up to 100 gbps
- no security groups
- NACL at subnet level applies to NAT gateay
- supported protocl: TCP UDP and ICMP
- uses ports 1024-65535 for outbound connection 
- for outbound internet access NAT gateway should be created in public subnet so that it can 
  communicate with the internet
- NAT gateway should be allocated elastic ip

NAT Instance
-------------
- to overcome the natgateway due to high cost we can use nat instance
- Must be in a public subnet
- must have public or elast ip
- should be launched using AWS provided nat ami
- disable source/destination check



#######################
Day 38 : 12th Sep. 2025
#######################

Working with AWS VPC ::::

- In service catalog, go to VPC- It provides isolated cloud resources
- you can see vpc , subnets, routetables, internetgateways

-  AWS Infra-Structure  :

- Create an AWS Infra Architecture Diagram

                   wwww internet
Region                               Mumbai Region
                        IGW
VPC                                       10.100.0.0/16

     AVAILABILIYZONE            AVAILABILITY ZONE

         Public subnet
      public ip
      private ip
        EC2-A
    10.100.0.0/24

      ap-south-1a                      ap-south-1b

Publick subnet route table
-------------------------------
Destination         Target
10.100.0.0/16       local
0.0.0.0/0           igw-xxxxxxxx


  Url- mxtoolbox.com/subnetcalculatro.aspx ( To calculate VPC)

EG 
10.100.0.0/24 - ip address of vpc
10.100.0 -- is internet mask
0/24 is 32-24=8 2^8 is  the subnet mask

Steps 
1. Create VPC
    A. aws console-- goto vopc service-- your vpcs-- create vpc( resource to create VPC only, name tag vpc-1a,
       ipv4 CIDR block: select IPV4 CIDR manual input(10.1000.0.0/16), Teanancy: Default--> Create VPC
2. Create Internet Gateway
    A. Internet Gateways--> Create Internet Gateway( Name tag: VPC-A-IGW) -> Create Internet gateway
    B. Select Internet gateway--> Actions--> Attach to VPC--> Select your VPC ( VPC-A) -> Attach Internet Gateway
3. Create Subnet
    a. subnets-> Create subnet
    b. select VPC ID: VPC- A
    c. subnet 1of 1 -> subnet Name VPC-A-Public, AZ: Select AZ 1, IPV4 CIDR block: 10.1000.0.0/24)--> Create
       subnet
    d. select subnet--> actions > edit subnet setting > modify auto assign ip settings> enable--> save

1. Create Route table
    a. route tables --> create route table( Name: VPC-A-Public-RT, select  VPC: VPC-A)>create route table
    b. select routetable -> routes--> edit routes--> add another route( destination: 0.0.0.0/0, Target: Internet gateway-. igw-xxxxx) --> save changes
4. Assocate route table with the subnet
    a. select route table--> subnet associations--> edit sbnet associations--> check the VPC-a publick subnet--> save  associations

	Public Subnet ::::
	
		VPC - PL1-VPC-A
		
				- PL1-VPC-A-IGW
				
				- PL1-VPC-A-Public			
				
				- PL1-VPC-A-Public-RT				
				
				- PL1-VPC-A-SG1
		

Creating VPC
- Click on create vpc, choose VPC only
- Name tag- PL1-VPC-A
- IPV4 CIDR block
- choose IPV34 CIDR manul input
  IPV4 CIDR - 10.101.0.0/16
  IPV6 CIDR block choose NO IPV6 CIDR block
- click on create VPC

Creating InternetGateway
- click on create internetgateway
- name -PL1-VPC-A-IGW
- click on internetgateway now, click on actions click on attach to VP
-  attach your vpcid 

Creating Public Subnet
- click on create subnet
- it asks for VPC id so choose your vpc id 
- based on vpc cidr range we need to create subnet range
- in subnet settings
- subnet name- PL1-VPC-A-Public	
- availability zone- choose az as per your need , if no preference it will dyanamically allocate but it is recommened to choose
- ipv4 vpc cidr block 10.101.0./16
- ipv4 subnet cidr block 10.101.0./24
- now select the subnet- click on actions - edit subnet ssettings
- In auto assign IP setting- enable auto assign public ipv 4 address

Creating Routetable
- click on routetables
- name -PL1-VPC-A-Public-RT
- choose vpc -PL1-VPC-A
- Now in the routtalbe, click on edit routes
- by defualt it will have local
- click on add routee
- destination- 0.0.0.0/0  target- IGW
Routeable
destination              target 
0.0.0.0/0               igw-0ffdasfd 
10.101.0.0/16             local

- In the route table, subnet association, we can add any no of subnets to the routetable
- click on edit subnetassociation, choose PL1-VPC-A-Public	
- click on save
- Now in the subnet association you can 
Name                   IPV4 CIDR
PL1-VPC-A-Public	  10.101.0.0/24

- Launch an ec2 instance now
- Name - PL- Test-Publick- SN1, AMI amazon linux, instance type t2 micro
- In networksetting - choose PL1-VPC-A
- subnet -PL1-VPC-A-Public	
- Auto assign public ip- enalbe
- Seucrity group - PL1-VPC-A-SG1
  Type- ssh 
  source type - MyIP
- Click on create ec2 instance
- now choose the public ip addres open mobaxter give the remote host  username - ec2-user
- choose private key - keypiar
- Now you can connect


- Creating private subnet
 	Private Subnet ::::
		VPC - PL1-VPC-A
				- PL1-VPC-A-Private 
				
				- PL1-VPC-A-Private-RT
				
				- PL1-VPC-A-SG2


                   wwww internet
Region                               Mumbai Region
                        IGW
VPC                                       10.100.0.0/16

     AVAILABILIYZONE            AVAILABILITY ZONE

         Public subnet
      public ip
      private ip
        EC2-A
    10.100.0.0/24

         Private subnet
      private ip
        EC2-A
    10.100.11.0/24

      ap-south-1a                      ap-south-1b

Private subnet route table
-------------------------------
Destination         Target
10.100.0.0/16       local

- go to subnet,  name -PL1-VPC-A-Private 
- chooose  vpc-PL1-VPC-A
- avaialbility zone -same az as of public subnet ap-south-1a
- ipv4 vpc cidr 10.101.0.0/16
- ipv4 subnet cidr blocl - 10.101.11.0/24
- click on create subnet
- now go to routetable, click on create routetable name-PL1-VPC-A-Private-RT
- vpc- PL1-VPC-A
- click on create routetable
-  Now in the routtalbe , click on subnet associations, click on edit routes
- add private subnet -PL1-VPC-A-Private 
- launch instance  name-PL- Test-Publick- SN1
-  ami - amazon linux
- keypair choose our vpc
- subnet- private subnet PL1-VPC-A-Private 
- SG- PL1-VPC-A-SG2
- type ssh
  source type custom  vpc cidr- 10.100.0.0/16 
  type all ICMP- IPV4 ( ping from one instance to another instance withing your private network)
  source type custom  vpc cidr- 10.100.0.0/16 

- Now connect to public instance 
- ping parivate instanceip adress
- you should see response as there in within a vpc and same az 
- How to login to private instance
- go to your public instance
- vi key.pem
- past the public key of private instance
- chomod 400 key1.pem
- ssh -i key1.pem ec2-user@privateipaddress 
- Now you can connect to the private isntance


Terraform code:
------------------------
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "6.13.0"
    }
  }
}

provider "aws" {
  region     = "us-east-1"
  access_key = "AKIAUNRZPCXQDNXKHJHL"
  secret_key = "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"
}


# Create VPC
resource "aws_vpc" "pl1_vpc_a" {
  cidr_block           = "10.101.0.0/16"


  tags = {
    Name = "PL1-VPC-A"
  }
}

# Create Internet Gateway
resource "aws_internet_gateway" "pl1_vpc_a_igw" {
  vpc_id = aws_vpc.pl1_vpc_a.id

  tags = {
    Name = "PL1-VPC-A-IGW"
  }
}

#Create public subnet
resource "aws_subnet" "main" {
  vpc_id                  = aws_vpc.pl1_vpc_a.id
  cidr_block              = "10.101.1.0/24"
  availability_zone       = "us-east-1a" 
  map_public_ip_on_launch = true

  tags = {
    Name = "PL1-VPC-A-Public"
  }
}

# Create Route Table
resource "aws_route_table" "pl1_vpc_a_public_rt" {
  vpc_id = aws_vpc.pl1_vpc_a.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.pl1_vpc_a_igw.id
  }

  tags = {
    Name = "PL1-VPC-A-Public-RT"
  }
}



# Associate Route Table with Public Subnet
resource "aws_route_table_association" "pl1_public_subnet_assoc" {
  subnet_id      = aws_subnet.main.id
  route_table_id = aws_route_table.pl1_vpc_a_public_rt.id
}




# Get the latest Amazon Linux 2 AMI (x86_64)
data "aws_ami" "amazon_linux" {
  most_recent = true
  owners      = ["amazon"]

  filter {
    name   = "name"
    values = ["amzn2-ami-hvm-*-x86_64-gp2"]
  }
}

# Security Group allowing SSH from your IP
resource "aws_security_group" "pl1_vpc_a_sg1" {
  name        = "PL1-VPC-A-SG1"
  description = "Allow SSH from my IP"
  vpc_id      = aws_vpc.pl1_vpc_a.id

  ingress {
    description = "SSH from my IP"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["49.43.219.206/32"]  # Replace with your real IP, or use data lookup
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "PL1-VPC-A-SG1"
  }
}


resource "aws_instance" "ec2" {
  ami                    = data.aws_ami.amazon_linux.id
  instance_type          = "t3.micro"
  subnet_id              = aws_subnet.main.id
  vpc_security_group_ids = [aws_security_group.pl1_vpc_a_sg1.id]
  associate_public_ip_address = true  # important for public subnet with public IP
   key_name                    = "my-new-key"
  tags = {
    Name = "PL-Test-Public-SN1"
  }
}


# We'll:

# Create a private subnet (10.101.11.0/24) in the same VPC and AZ as the public subnet.

# Create a route table for the private subnet (without IGW).

# Launch a private EC2 instance in the private subnet.

# Set up a security group allowing:

# SSH only from inside the VPC

# ICMP (ping) from within the VPC

# From the public EC2, you will:

# SSH into the private EC2 using a .pem file

# Ping the private EC2 from public EC2


resource "aws_subnet" "private_subnet" {
  vpc_id                  = aws_vpc.pl1_vpc_a.id
  cidr_block              = "10.101.11.0/24"
  availability_zone       = "us-east-1a"
  map_public_ip_on_launch = false

  tags = {
    Name = "PL1-VPC-A-Private"
  }
}


resource "aws_route_table" "private_rt" {
  vpc_id = aws_vpc.pl1_vpc_a.id

  tags = {
    Name = "PL1-VPC-A-Private-RT"
  }
}

resource "aws_route_table_association" "private_subnet_assoc" {
  subnet_id      = aws_subnet.private_subnet.id
  route_table_id = aws_route_table.private_rt.id
}


resource "aws_security_group" "pl1_vpc_a_sg2" {
  name        = "PL1-VPC-A-SG2"
  description = "Allow SSH and ICMP within VPC"
  vpc_id      = aws_vpc.pl1_vpc_a.id

  ingress {
    description = "SSH from within VPC"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["10.101.0.0/16"]
  }

  ingress {
    description = "Ping (ICMP) from within VPC"
    from_port   = -1
    to_port     = -1
    protocol    = "icmp"
    cidr_blocks = ["10.101.0.0/16"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "PL1-VPC-A-SG2"
  }
}


resource "aws_instance" "private_ec2" {
  ami                         = data.aws_ami.amazon_linux.id
  instance_type               = "t3.micro"
  subnet_id                   = aws_subnet.private_subnet.id
  vpc_security_group_ids      = [aws_security_group.pl1_vpc_a_sg2.id]
  associate_public_ip_address = false
 key_name                    = "my-new-key"
  tags = {
    Name = "PL-Test-Private-SN2"
  }
}



VPC Connectivity Methods :::
- VPC endpoints and pirvate link
- VPC peering connection
- Transit Gateway
- Site-2-site VPN
- client VPN
- Direct Connect



#######################
Day 39 : 15th Sep. 2025
#######################	

- Defualt VPC:
   - By default we will be have a vpc in each region, 
   - AWS creates Default VPC in eaach aws region
   - creates VPC with cidr 172.31.0.0/16
   - creates subnets in every az with CIDR /20
   - creates internet gateway
   - Main route table with route to internet which make all subnets public
   - if deleted you can recreate default VPC

Destination     Target
172.31.0..0/16   local
0.0.0.0/0        igw-xxxxxxx


- Defualt VPC architecture in AWS

                             wwww internet
Region                                               Mumbai Region
                                   IGW
VPC                                                         172.31.0.0/16

Mainroutetable

     AVAILABILIYZONE            AVAILABILITY ZONE      AVAILABILITY ZONE

    Public subnet                Public subnet           Public subnet
  
      
    172.31.0.0/20                 172.31.16.0/20           1721.31.32.0/20


      az1                             az1                    az1


- 

VPC Connectivity Methods :::

		VPC Endpoints & PrivateLink
		VPC Peering connection
		Transit Gateway
		Site-2-Site VPN
		Client VPN
		Direct Connect

VPC Peering Connection:

|----        VPC- A
|             ))((--------------VPC Peering (A-B)
|              |
VPC Peering   VPC- B
(a-c)          |
|             ))((--------------VPC Peering (B-C)
|              |
|--          VPC- C

            
-  consider i have VPC -A and VPC -B if i want to use communication between both we suse 
  vpc peering
- privately connnet two  vpc using AWS network
- Make them behave as if they were in the same network
- Must not have overlapping CIDR's
- VPC peering connection is not Transitive( must be established for each VPC that need to communicate with one anoanother)
- You must update route tables in each VPC's subnets to ensure EC2 instances can communicate with each other

VPC Endpoint and Private Link:

                                        wwww internet
                 Region                                               Mumbai Region
                                              IGW
                 VPC                          |                               10.0.0.0/16
                                              |
                 Mainroutetable               |--------------------------
                                                                           |
                                        AVAILABILITY ZONE                  |
                                                                           |
                                        Public subnet               Nategatewau
 
                                           10.100.11.0/24               |
                                                                        |    
                                                                        | 
                                                                        |
                                             privatesubnet   -----------   
s3     --------- VPC Endpoint----------  application (private ip
dynamo db
                                            
                                                 az1                   



- I have a vpc with public subnet and private subnet, when eever private subnet needs to access internet
  we use nat gateway and connect intergateway and user s3
- i want to access the s3 bucket, instead of using natgateway and using s3 bucket
  we can create VPC endpoint gatewayy and connect to s3
- so when ever you want to access external vpc load balancer in another vpc we can use endpoints which is associated with private link
- private link and endpoints helps in accessing service VPC,

                                        wwww internet
                 Region                                               Mumbai Region
                                              IGW
                 VPC                          |                               10.0.0.0/16
                                              |
                 Mainroutetable               |
                                                                           
                                        AVAILABILITY ZONE               |
                                                                           
                                        Public subnet             
 
                                           10.100.11.0/24             
                                                                      
                                                                      
                                             privatesubnet   
      -  Private link----- VPC Endpoint----------  application (private ip
      |                                         az1 
      |
      |
-------------------------------------------------|
|applicationservice        networlload balancer   |
--------------------------------------------------
s3 
dyanmo db
   - In summary, dedicate service we have vpc endpoints and private to establish componets to private subnet commponeest to
      puvlic subnets
   - In general , every aws service is publick is exposed,which this endpoints your private subnet is exposed to public internet  
   - This vpc endpoints it allows you to connecto aws services using private network instead public network
   - every aws service is publicly exposed 
   - vpc endpoints powered by aws private links allows you to connect to aws services using a private network instead of using the public ninternet
   - there redudant and scale horizontally
   - they remove the need of iGW, NATGW to acces AWS service
   - In case of issues:       
        check DNS setting resolution in your VPC
        check route table

Types of Endpoints:

Interface endpoints( powered by private link):

 - provisions an ENI( Private IP addresse) as an entry point( must attach a security group)
 - supports most AWS services
- $ per hour + $ per GB of data processed
__________________________________________________
| ____Region____________________________________________ 
| | vpc                         
| |   private subnet             
| |       ec2 instance          vpc endpoint interface      
| |                             ENI( privatelink)
| |________________________________________________
|           Amazon SNS 
__________________________________________________


__________________________________________________
| ____Region____________________________________________ 
| | vpc                         
| |   private subnet             
| |       ec2 instance           vpc endpoint gateway
| |                              
| |________________________________________________
|           Amazon S3       or       amazon dynamo db
__________________________________________________



Gateway Endpoint:
 - Provisions a gateway and must be used as a target in a route table (does not use security grouops)
 - supports both S3 and dynamoDB
 - Free


Transit Gateway:

- when ever you have more vpc instead vpc peering it is recommened to use transit gateway
- it is a process acts as a interface between all the vpcs
- vpc a wants to connect to vpc b it will use transit gateway to communicate

|---------------------------------------------------------------------
|region
|
|    --------------------------------------
|    |  VPC                         10.0.0.0/16
|    |
|    |           public subnet
|    |
|    |                    
|    |
|    |           private subnet 
|    |
|    |                 private ip
|    |                application
|                           |
|                           |
|                           |
|                         ))  ((------------------Transit gateway -------VPN---------------On premissin datacenter
|                           |
|                           |
|     --------------------------------------
|      |  VPC                         10.0.0.0/24
|      |
|      |
|      |
|      |
|      |
|      |      
|      |
|      |
|      |
|      |
|      |
|      
|      
|________________________________________________________________________________


Transit Gateway with VPNC attachment:
- from my on premiss if i want to connect to Transit gateway we use vpn attacchemnt

Transit Gateway peering 
- betweeen two different regions connected via transsit gateway 

Site to Site VPN:
__________________________________________________
| ____Region____________________________________________ 
| | vpc                 10.0.0.0/16
| |   az     
| |   publick subnet                      vpn gateway  -------IPSECVPN------Onpremisis datacenter
| |   private subnet        
| |        private ip(app)                    
| |________________________________________________
|          
__________________________________________________

client to Site VPN:
__________________________________________________
| ____Region____________________________________________ 
| | vpc                 10.0.0.0/16
| |   az     
| |   publick subnet                      vpn gateway  -------INTERNET-----HOME WIFI
| |   private subnet        
| |        private ip(app)                    
| |________________________________________________
|          
__________________________________________________

Direct Connect (DX):

AWS  ---  aws backbone network---- Direct Connect Location-----On premissis data center
region    

- Provides dedicated and consistent network
- provided network bandwith from 50 Mbps up to 100 gbps over a single connection
- low data transfer cost


What is IPv6
- IPv4 desinned to provide 4.3 billion address( they will be exhauted soon)
- IPV6 is the sucess of iPV4
- IPV6 is desinged to provide 3.4*10^38 unique ip address
- every ipv6 address in aws is public and internet- routable( no private range)
- format x.x.x.x.x.x..x.( x is hexadecimal, range can be from 0000 to fffF)
- examples:
   2001:db8:333:4444:5555:6666:7777:8888
   20001:db8:3333:4444:cccc:ddd:eeee:ffff
   ::-> all 8 segmet are zero
   2001:db8::-> the last 6 segments are zero
   ::1234:5678--> the first 6 segments are zero
   2001:db8:1234:5678--> the middle 4 segmetns are zero
- IPV4 cannot be disabled for your vpc and subnets

IPV6 in VPC:
- you can enable ipv6 ( they are public ip addresses) to operate in dual-stack mode
- your ec2 instances will get at least a private internal ipv4 and a public ipv6
- they can communicate using either ipv4 or ipv6 to the internet through an internet gateway

IPV4 Troubleshooting:
- IPV4 cannot be disabled for your VPC and subnets
- so if you cannot launch an EC2 instance in your subnet
  - it's not because it cannot acquiure an IPV6( the space is very large)
  - it's because there are no available ipv4 in your subnet
- solution: create a new ipv4 cidr in your subnet

Egress- only Internet Gateway
- Used for IPV6 only
- (similar to a NAT gateway but for IPV6)
- Allows instances in your vpc outbound connections over IPV6 while preventing
  the internet to initiate an IPV6 connection to your instances
- you must update the route tables

                      Internet
initate connection from      cant initiate connection from internet
both side          
                igw         egres- only intergateway

 publick subnet                 private subnet
     instance                         instance 


VPC Section Summary:

- CIDR - IP range
- VPC - virtual private cloud -- we define a list of iPV4 and IPV 6 cidr
- subnets -tied to an AZ we define a cidr
- internet gateway - at the vpc leavle, provide IPV4 and IPV6 internet access
- route tables- must be edited to add routes from subnets to the IGW, VPC perringconnection, VPC endpoints
- Bastion host- public ed instance to ssh  that as ssh connectivity to ec2  instances in private subnets
- NAT instances- gives internet access to ec2 instances in private subnets. OLD must be setup in a public subnet  , disable source/destination check flag
- NAT gateway- managed by AWS provides scalable internet access to private EC2 instances when the target is an IPV4 afftdress
- Direct Connect- setup a virtual private Gateway on VPC and establish a direct private  connection to an aws direct connectlocation
- Direct Connect Gatway- setup a direct connect to many VPCs in different aws regions
- AWS privateLink/VPC endpoints services
  - Connect services privately frmo your service VPC to customers VPC
  - Doesnt need VPC peering public internet NAT gateway routetables
  - must be used with network load balancer and ENI
- ClassicLink- Connect EC2 classic EC2 instances privately to your VPC
- Transit Gateway- Transitive peering connections from VPC,VPN and DX
- Traffic Miroring- copy network traffic from ENI;s for further analysis
- Egress only inetergateway- Like a NAT gateway but for iPV6 targets

Networking Costs in AWS  Per GB - Simplified

- Use private IP instead of public IP for good savings and better network perfromance
- Use same AZ for maximum savings( at the cost of high availablity)


-----------------------------------------      
|Region                                                              Region
|
|   ______AZ________                AZ                                  AZ
|   |
|   |    ______
|   |   |
|   |   |
|   |   |______
|   |     | Free if using private IP 
|   |     ______                                            &0.02
|   |    |   -------------USING private ip$0.01------------------>       instance
|   |    |_______                                           Inter-region 
|   |_______________


Minimizing egress traffice  network cost
- Egress traffic: outbound traffic( from AWS to outside)
- Ingress traffic: inbound traffic - from outside to aws
- try to keeyp as much internet traffic withing AWS to minimize costs
- Direct connect location that are co-located in the same AWS REGION RESULT IN LOWER COST FOR EGRESS
  Network

S3 Data Transfer  Pricing- Analysis for USA
- S3 ingress: free
- s3 to internet: $0.09 per GB
- s3 transer acceleration: 
    - Faster trasnfer times( 50 to 500% beter)
    - additional cost on top of data transfer
      priciing +$0.04 to 40.08 per GB
- S3 to cloud front: $0.00 per GB
- Cloud front to internet: $0.85 per GB ( slightly cheaper than s3)
  - caching capability( lower latency)
  - Reduce costs associated with s3 request pricing( 7x cheaper with cloud front)
- s3 cross region replication: $0.02 per gb

Pricing:
NAT Gateway vs Gateway vpc endpoint
Natgateway:
- $0.045 NAT gateway/hour
- $0.045 NAT gateway data processed /GB
- $0.09 data transfer out to s3( cross-region)
- $0.00 data transfer out to s3( same-region)

VPC endpoint:
No cost for using Gateway Endpoint:
$0.01 Data transer in/out( same - region)

Network Protection on AWS
- To protect network on AWS, We have sen
   - Network Access control list( NACLS)
   - Amazon VPC security grouops
   - aws WAF ( protect against malicious requests)
   - aws shield  and aws shield advanced
   - aws firewall manager ( to manage them across accounts0

AWS Network Firewall:

- Protect your entire Amazon VPC
- From layer 3 to layer7 protection
- Any direction you can inspect
   - vpc to vpc traffic
   - outbount to internet
   - inbound from internet
   - to/ from direct connect and site to site VPN
- Internally the AWS network firewall uses the AWS gateway load balancer
- Rules can be centrally managed cross-account by AWS firewall manager to apply to many vpc


Why https:=?
- https is encrypted connection of data


7 Application    http
6 Presentation   ssl/tls
5 Session
4 Transport
3 Network
2 Datalink
1 Physical


How Https work?
- At application layer , HTTPS works
- at presentation layer, ssl/tls works
- from local machine  using webbrowser using https protocal, it will process using ssl/tls to the destination end
- ssl/tls simplete certificate, 


SSL/TLS: SSL (Secure Sockets Layer) and TLS (Transport Layer Security)
- to maintain  authenticity
- privacy
- integrity

Ceritficate authory data
CA signature
trust store


ssl sever public cert ,server public key                                            ssl sever public cert ,server private key 
Session key                                             SSL/TLS
client server  ------------------------------------------------------------------  Session key
encyrt/decrypt                                                                          encyrt/decrypt
                                                        network

Using AWS CLI
aws ec2 create-vpc --cidr-block 10.0.0.0/16 --tag-specifications Resource Type=vpc, Tags=[{Key=Name,Value=MyVPC}]a
aws ec2 create-internet-gateway
aws ec2 attach-internet-gateway --vpc-id vpc-xxxxxxx --internet-gateeway-id igw-xxxxxx
aws ec2 create-subnet --vpc-id vpcc-xxxxxxxxxxx --cidr block 10.0.0.0/24 --availability -zone ap-south-1a
aws ec2 create-route-table --vpc-id vpc-xxxxxxxxxx
aws ec2 create-route --route-table-id rtb-xxxxxxx -destination-cidr-block 0.0.0.0/0 --gatway-id igw-xxxxxx
aws ec2 associate-route-table --route-table-id rtb-xxxxxx -subnet-id subnet-xxx
aws ec2 create-route-table --vpc-id vpc-xxxxx
aws ec2 create-nat-gateway --subnet-id subnet--xxxxxx- allocatiuon-id eipalloc-xxxxxxx






Next :::

	Load Balancer 

	
#######################
Day 40 : 16th Sep. 2025
#######################		

	High Availability & Scalability :
	- Scalabitliy means that an application/ systemt can handle  greater loads
      by adapting
    - there are two kinds of scalabitliy
      . Veritical scalability
      . horizontal scalability =( elasticity)
    - scalability in linked but different to high avaialbilty

     Vertical Scalability:
    - Vertically scalabitiy means increasing the size of the instance
    - for example your application runs on a t2.micro
    - scaling that application vertically means running it on a t2.large
    - vertical scalabitiy is very common for non distributed systems such as a database
    - RDS, Elasti cache are services athat can scale vertically
    - There's usually a limit to how much you can veritcally scalre hardware limit

     Horizontal Scalability:
     - Horizontal scalability means increaing the no of instances /systems for your application
     - Horizontal scaling implies distriubted systems.
     - This is very common for web applications/ modern applications
     - it's easy to horizontally scala thanks the cloud offerings such as amazon ec2

     High Availablity
       - hIGH Avaialability ususally goes hand in hand with horizontal scaling
       - high avaialbility means runnning your application /system in at least 2 data centers(== availability zones)
       - They goal of high availablity is to survive a data center loss
       - They high availablity can be passive )for RDS Multi AZ for example
       - They hgih availablity can be active( for horizontal scaling)
     High availability and scabality for EC2
    - Vertical scaling increat size( =scle up/doemm
        -Fromom t2.nsno -0,5 of RMA,I VPU
        - tu u-12tla.metl 12.3 tb of ram 448 apvu
     - Horizontal scaling increase nuof iost sitances (= sdcaore 0utfor 
        -auto  scalign group
        - load balacer
      - High avaialibity: Run instacnes for the same  aoplication across multi AZ 
       - Auto scaling group mulit az
       - load balancer multi az                                                                                                                                                                                

   Load Blance:
    - Load balances ar servers that forward traffic to multiple server( eg: EC2 instances donstream

   Why use a load balancer
   - Spread load acorss multiple doenstaream instances
   - expose a s8ngle proint of access( DNS)  to to your application
   - seamlessly handly failures of downstream instances
   - do regular health check s to your instances
   - provide SSL terminatino (HTTPS) of your websites
   - enforce stickiness with cookies
   - high avaialblity acorss zones
   - seperate public traffic from private link

	Why use an Elastic load balancer
     - An elastic load balancer is a manager load balancer
     - AWS gurantees that it will be working
     - AWS takes care of upgrades maintanence high availablity
     - AWS provides only a few configuration knobs
     - it costs less to setup your own load balancer but it will be a lot more efforrt on your end
     - it is integrates with many AWS offerings/services
     . EC2  auto scaling groups, amazon ecs 
     . aws ceritficate manager acm, cloud watch
     . route 53,aws waf, aaws global acceleartor

     Health checks:
     - Health checks are crucial for load balancers
     - They enable the load balancer to know if instances it forwards traffic to are avaialbe to reply to request
     - The health check is done on a port and a route\ 
     - if the response is not 200(ok) thne the instance is unhealthy


     External and Internal load balancer:
     - 
     External LB:
      - in vpc, it has two az's which has public subnet and private subnet
      - wheneve end user try to access via internetgateway, the loadbalancer send the request to private subnets usingg
        roundrobin method
     Internal LB: 
       - Within your vpc when internal private subnets applications want to communicate to 
         internal private subnets app2 we use internal loadbalancer
     ??

     Example Architecture:
   - The external (public facing) load balancer serves the traffic from the internet
   - The internal (private ) load balancer serves traffic from within the VPC eg We b server to apps servers
   - Load balancers works with Auto scaling group( ASG) enabling automatic scaling of the back end ec3 sintacnes
      ??

   Types of load balancer on AWS:
   - AWS has 4 kinds of managed load balancers
   - Classic load balancer( vl  -old generation) - 2009 -CLB
     .HTTP.HTTPS,TCP,SSL(secure TCP)
   - Application load balancer( v2 - new generations) -2016- ALB
      . HTTP, HTTPS, Websocket
   - Network load balancer( v2 - new generation) -2017- NLB
      TCP,TLS( Secure TCP) UDP
   - Gateway Load Balancer- 2020 - GWLB
       Operates at layer 3 ( Network layer) IP protocol

. Overral, it is recommened to use the newer generation balancers as they provide more features
. Some load balancer can be setup as internal(private) or external( public etlbs



 OSI Network layers
??

 Classic Load Balancer:
 - suports TCP ( Layer 4) , HTTP  & HTTPS( layer7)
 - Helath check are TCP or HTTP based
 - fixed hostnmae
   xxx.region.elb.amazonaws.com

client---------Listener--> clb------Internal---> EC

  Application load Balancer(v2):
 - application load balancers is layer7 ( HTTP)
 - Load balancing to multiple  HTTP applications across machines
   (target groups)
 - load balancing to multiple applications on the same mahcine ( ex: containerts)
 - support for http/2 and websocket
 - support redirect ( from HTTP to HTTPS for example)

??

  Application Load Balancer (V2)
  - Routing tables to different target groups:
    - routing based on path in URL( example.com/users & example .com/posts)
    - routing based on hostname in URL( one.example.com  & other.example.come)
    - routing based on query string headers
      (example.com/users? id=123$order=false)

 - ALB are a great fit for micro services and contaienr based application(
   ( example: Docker &&  Amaxon ECS)
- Has a port mapping feature to redirect to a dynamic port in ECS
- in comparison ,wed need multiple classic load balancer per application

	ALB Routing :::
	
	
		Host based routing 									www.google.com 
															www.mail.google.com 
															www.maps.google.com
															
		
		path based routing 									www.mail.google.com/inbox
															www.mail.google.com/sent 
															
															
		
		Query/Parameters based routing						www.mail.google.com/inbox/from:aws?
	
  Application load balncer( v2)
  target groups
- EC2 instances( can be managed by an auto scaling group)- http
- ecs task( managed by ecs iteself) -http
- lambda functions - http request is translated into a json event
- ip addressed - must be private ips
- ALB can routed to multiple target ggroups
- Health checks are at the target ggroup level

 Network Load Balancer
 - Network load balancers( layer 4) allow to:
   - forward TCP && UDP traffic to yoru instances
   - handle millions of request per seconds
   - ultra low latency
- NLB has one static IP per AZ and supports assigning elastic IP
  ( Helpful for whitelisting speicif IP)
- NLB are used for extreme performance  TCP or DP traffic
- not included in the AWS free tier

Gateway load balancer
- Deploy ,scale and manage a fleet of 3rd party
  network virutal appliances in AWS
- Example: Firewalls intrusion detection and prevention systems, dep packet inspection systems
  deep packet inspection systems, payload manipulation
- operates at layer 3 ( Network layer ) -IP packets
- combines the follwing functions
   .transparent netowkr gateway - single entry/exit for all traffic
   . load balancer- distributes traffic to your virtual applicances
- uses the geneve protocol on port 6081
???


Sticky Session ( Session Affinity)
- It is pissible to implement stickiness so that the same client is
  always redirected to the same instance behind a load balancer
- This works for classic load balancer, Application load balancer and network load balancer- 
- For both CLB and ALB, the cookie used for stickiness has  an expiration dat you control
- Use case make sure the user doesnt los his session data
- Enabling stickiness may bring imbalance to the load over the back end EC2 instances


Cross Zone load balance:
??

With Cross Zone load Balancing
- each load balancer instance distributes evenly across all reistereed instances in ALL AZ

Without cross zone load balancing
- Request are distrbuted in the instances of  the node of the elastic load balancer



	Working with Load Balancer!
	
Create a Load Balancer and Route Traffic to EC2 Instances thru Load Balancer.
??
- Let prepare the target serivce, then we shall setup the loadbalancer  to route
  the request and access the service
- im going to execute two ec2 for web applications, end user can dicrectly toaccess to ec2 instances
- but my requirement is ec2 are only exposed to the loadbalancer
- so whenerever user access the ec2 it should be from load balancerr
- since we have 2 ec2 instances how the request is equally distributed ?
- and also we have a listener to listener the requests

Load Balancer security groups
???

- end user will http/https request to use load balancer
- whenever we create load balancer we should create load balancer security group
- sg will internet facing 
Type    protocol  port      source
 http    tcp        80       0.0.0.0/0  allow http
 https   tcp        443        0.0.0/0  allow https


application security group 
Type    protocol port      source
 http    txp      80     sg -bc434394987dfdkhskdfa/AL-SG


- launch an 2 ec instance
- instance name - webapp_server
- amazon linux
- instance type
- key pair
- SG-
  allot http traffice from intern
  allow ssh traffic from 
- advanced details

	#!/bin/bash
	yum update -y
	yum install -y httpd
	systemctl start httpd
	systemctl enable httpd
	echo "<h1>Hello! You accessing web server - $(hostname -f)</h1>" > /var/www/html/index.html
-  go to load balancer
- click on create application loadbalancer
- load balancer name - PL-DemoALB
- choose internet facing
- choose IPV4
- NETWORK mapping
  choose defulat vpc or your own vpc
  choose all the avaialbility zones 
- security groups
   click on create a new security group
   name- PL-DemoALB-SG1
   descriptiong 0 ALLow http thr ALB
   Inbound roles http    source 0.0.0.0/0

   outboutnd all traffice source 0.0.0.0/0
-  now go to same load balancer page and choose sg as PL-DemoALB-SG1
- listerners and routing
  by default 
  http     80
  routing action
  forward to target group  - click on create target group
- choose a target type- instances
  target group name- PL-ALB_WebApp-TG1
  protocol
  http   80
  ip address type ipv4
  protocol version   http1
  health checks
  health check protocol - http
  health check path /
- click on next
- Register gargets
  - select your instances in Az region
  - click on include
- click on create target group

- Now in alb paged choose target group-PL-ALB_WebApp-TG1

- Now in the load balncer select PL-DemoALB , copy DNS 
   
- Now go to sg of ec2 instances
- got to sg
- inobound rule 
   click on add ule
   - type http source customm  PL-DemoALB-SG1
   - remove http source 0.0.0.0/0


- In the application attributes you can add stick configuration as well from target group




	
#######################
Day 41 : 18th Sep. 2025

#######################


- Cloud FRONT & Global Acceleartor:
    - used as content delivery network
    - improve the user experience
    - they maintain edge locations in all most all the regions to store the used data to maintain user experince
    - Content Delivery Network (CDN)
    - Improves read performance, content is cached at the edge
    - 216 point of presence globally ( edge locations)
    - DDOS protection (because worlwide) integration with shield aws web application firewall

Cloud front Geo Restriction
 - You can restrict who can acess your  distribution
 - Allow list: Allow your users to acces your content only if there in one of the countries on a list of approved countires
 - Blocklist: Prevent your users from acessing  your content if theyre in one of the coutnries on a list of banned countries
- The countr is determinted using a 3rd party Geo iP database
- Use case:Copyright laws to control access to content



Cloud Front - Pricing
- Cloud Front Edge locations are all around the world
- the cost of data out per edge location varies

Cloud Front - Price classes
- You can reduce the number of edge locations for cost reduction
- Three price classes:
  1. Price class all: all regions - best performance
  2. Price class 200: most regions but excludes the most expensive regions
  3. Price class 100: only the least expensive regions

Unicast IP vs Anycast IP
 Unicast IP: One server holds one iP address
 Anycast IP: all servers hold the same IP addresses and the clent is routed to the nearrrest one

??


AWS Global accelerator:
Work with elastic ip , ec2 instances, ALB, NLB, public or private
-Consistent performance
 - Intellingent routing to lowest latency and fast regional failover
 - No issue with client cache ( because the IP doesnt change)
 - Internal AWS network
- Health checks
 . global accelerator perform a health check of your applications
 . helps make your application global (Failover less then i minute for unheealthy)
 . great for disaster recovery
- Security 
  . Only 2 external IP need to be whitelister
  . DDOS protection thanks to aws schield

AWS Global Acceleartor vs Cloud Front

- They both use the AWS global network and its edge locations around the world 
- Both services integrate with AWS shiel fro DDOS protection

CloudFront 
 - Improves performacne for both cacheable content( such as aimages and videos)
-  dynamic content ( such as API aacceleration and dynamic site delivery )
- content is serverd ad the edge

Global accelerator:
- Improves performance for a wide range of applications over TCP or UDP
- Proxying packets at the edge to applications running in one or more AWS regions
- Good fir for non HTTPS use cases  such as gaming UDP lOT MQTT or voice over IP
- good for HTTP use cases that require static IP addresses
- good for HTTP use casses that required detemrinistic fast regional failover


Amazon Cloud Front
- Content Delivery Network CDN
- Improves read performance, content is cached at the edge
- improves users experience
- 216 point of presence globally edge locations
- DDOS protection ( because worldwide) integrations with shield, AWS weba pplications firewall

Amazon Cloud watch Metrics

-CloudWatch provided metrics for every services in AWS
- Metric is a variable to monitor( CPUUtilization , neTWORKLN)
- Metrics belong to namespace
- Dimension is an attirbute of a metric( instance id, envnvironment, etc)
- up to 30 dimensions per metric
- Metric have timestamps
- can create cloudwatch dashboards of metrics
- can create cloudwatch custom metrics

Cloud watch logs:
- Log groups: arbitrary name, usually representing an application
- Log stream instances withing application/log files/continaers
- can define log expiration policies(never expire 1 day to 10 yearS)
- Cloud watch logs can sent logs to:
  -Amazon S3 exports
  - Kinesis Data Streams
  - Kinesis Data Firehose
  - AWS Lambda
  - OpenSearch
- Logs are encrypted by default
- Can setup KMS based encryption with your own keys


Cloud Watch logs: -S3 Export
- Log data can take up to 12 hours to become available for ex port
- The API call is createExportTask
- Not near- realtime or realtime us logs subscriptiones ininstead

- while create a ec2, In advanced details. Detailed cloudwach monitoring is alwasy enabled
  for basic level



CloudWatch Alarms
- Alarms are used to trigger notifications for any metric
- Varous options (sampling % max,min ,etc)
- Alarm States:
   . OK
   . Infufficent data
   . alarm
- Period
   .Length of time in seconds  the evalute the metric


Cloud watcha alarms targets
- stop terminate reboot recover an ec2 instance
- trigger auto scaling action
- send notificatino to SN ( from which you can do pretty much anything)







- 
