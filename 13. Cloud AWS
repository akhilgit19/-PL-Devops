Introduction to Cloud:
============================
   - Devops Projects:
      ---> Use this project in reusme
                - Banking/ Retails     ====> Phase 1 - ( Here you will be using defulat vpc, subnets)

      ---> AWS Cloud Services          =====> Phase 2 - ( Here you will create a dedicated vpc,subnets, routetables, intergetatway)
                                             within the private network you will deploy through jenkins and implement your services using kubernetes
                                             by  the help of load balancer.


#########################
Day 33 : 4th Sep. 2025
#########################

	AWS Solution Architect Associate Level!
=============================================	
	Introduction to Cloud :::
=============================================
		What is Cloud Computing?
=============================================
		- If you want to avail , servers ,databases ,storage,networking from internet instead of onpremsis

    why is cloud computing important?
=============================================
    - faster service provisioning
      dynamic scalability
      good reliablitiy
      cost effective 
      higher productivity 
      efficient performance
      high security

    Diffent Layers of cloud computing
=============================================
      Applications           Software as a serveice      applications

      programming            platform as a service       Programming
      environment                                        environment

      virtual Machine1        Infrascture as a service    Virtual Machine
                               servers



     Different Cloud Computing Service Modes
=============================================

 On premise             Infrasctureas a service           platform as a service      software as a service
===========            =========================          =====================       =======================
applications            applications                        applications              applications
data                    data                                 data                     data
runtime                 runtime                  ==========  runtime                  runtime
middleware              middleware                            middleware              middleware
o/s                     o/s                                   o/s                     o/s
virtualization          ==========virtualization              virtualization          virtualization
servers                           servers                     servers                 servers
storage                           storage                      storage                 storage
networking                        networking                   networking             networking




public cloud
private cloud
hybrid cloud
community cloud


AMS - AMAZON Web services
=============================================
- Benefits of AWS
   -  Easy to use
   -  scalable and provides high performance
   -  dominant market position
   -  cost efective
   -  reliable
   -  secure
   -  flexible
   -  can support large organization


AWS Services

       1. Compute - EC2, Amazone ElasticBeanstalk, Amazon lambda, Amazon scaling, Elastic load balancer
       2. Storage and content delivery - amazon ebs, amazon efs, amazon s3, amazon glacier,
                                       amazon storage gateway, amazon cloudfront
       3. Networking - amazon vpc, aws direct connect , amazon route s3
       4. database- amazon rds , amazon dyanmo db, amazon elasticcache, amazon redshift
       5. managment tools- amazon cloudwatch, aws cloud formation, aws cloud trail, aws trustadvisior
       6. security and identity - aws idently access management (IAM), aws key managemnt service(KMS)
       7. Application services- amazon ses , amazone sns, amazon sqs , amazon swf
       8. developer tools- codepipeline, code deploy, code build , code commit


 Services Comparision: AWS , AZURE   and GCP

  AMAZON AWS            MICROSOFT Azure        GCP
=========================================================
   S3                   Blog storage          storage
   EC2                  Virtual machines      compute engine
   ec2 container serv    container service     kubernetes engine
   elastic beanstalk     cloud service         app engine
   dynamodb              cosmos db              bigtable
   redshift              sql databse            bigquery
   lambda                azure functions        cloud functions
   dynamo                cosmos db              cloud datastore



AWS Global infrascture
==========================
- aws regions
    - aws has regions all around the world
    - names can be us-east-1 eu-west-3
    - a region is a cluster of data centers
    - most aws services are region scoped
   -  How to choose an aws regions
    1 compliance with data goverance and legal requirements: data never leaves a region without 
      your explict permission
    2 proximity to customers reduced  letency
    3 available services within a region: new servers and new features arent' available in every region
    4 pricing: pricing varies region to region and is transparent in the service pricing page


- aws availabitiy zones:
    - Eachi region has many availablity zones
       (usualyly 3 min is 3 max is 6)
     example ap-souteast-2a, ap-souteast-2b, ap-souteast-2c
    - each avaialbity zone is one or more discrete data centers with redundant powers
      networking and connectivity
    - they are separate from each other so that they are isolated from disasters
    - they are connected with high bandwidth, ultralow latency networking

- aws data centers
 
- aws edge locations/ points of presence
  - Amazon has 400+ points of presence (400 + edge locations & 10+ regional caches)
    in 90+ cities across 40+ countries
  - content is delivered to en uses with lower latency


		IAM Services
		- 
		EC2 Services 
		
		

		
Next :

	IAM Service Demo
	EC2 Service!
	
	
########################
Day 34 : 5th Sep. 2025
#########################		
	
	- IAM Services :

	https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html


    - IAM user and groups
      - IAM = Identy and access managmentl, global service
      - root account created by defulat shouln't be used or shared
      - users are people within organization and can be grouped
      - groups only contain users, not other groups
      - users dont have to belongs to a group and user can belong to multiple groups

    - IAM : Permission
      - users or groups can be assigned json documents called policies
      - These policies define the permission of the users
      - In AWS you apply the least privilege prinicple dont give more permission tha a user neede

    - IAM Policies structure
      - consists of 
         . versions: policy language version, always include 2012-10-17
         . id: an identifier for the policy 
         . statement: one or more individual statements
      - statements consits of
         . sid: and identifier for the statement
         . effect: wheather the statement allows or denies access 
         . prinicpal: account/users/role to which this policy applied to 
         . action: list of actions this policy allows or denies
         . resouce: list of resouces to which the actions applied to 
         . condition: conditions for when this policy is in effect

     - How can users access AWS.
         . To access AWS, you  have three options
           - AWS Managment console( Protected by  password + MFA)
           - AWS command line interface (CLI) protected by access keys
           - AWS software Developer Kit( SDK) for code protected  by access keys
         . Access keys are generated through the AWS console.
         . users manage their own access keys
         . Access keys are secret, just like a password, Dont share them
         . Access key id = username
         . secret accesskey = password

     - IAM: MFA device options in AWS (optional)

      - How can users access AWS

			- AWS Console 
			
			- AWS Cli 
			    https://github.com/aws/aws-cli
                https://docs.aws.amazon.com/cli/latest/userguide/cli_code_examples.html
			- AWS SDK
               - AWS software development kit( AWS SDK)
               - language speicfic API's ( set of libraries)
               - enables you to access and manage AWS services programmatically
               - embedded within your application
               - supports 
                      - SDK's( javascript, pythong, pHP NET, Ruby java, Go nodejs c++)
    - IAM Roles for services
       - Some AWS service will need to perform actions on your behalf
       - To do so we will assign permission to AWS services with IAM roles
       - Common roles 
           EC2 instance roles
           Lambda function roles
           roles for cloud formation

    
	- Create IAM User 
           - In aws console, Go to IAM, click on users, click on create user,username - plappuser1
           - choose (provide user access to the AWS Management console)
           - choose (i want to create an IAM user)
           - console password  choose custom password
           - choose ( user must create a new password a next sign)
           - click on next
           - In permissions options- attach policies direclty and you can choose admin access
           - or
	- Create User  Group 
           -  you can choose add user to group 
           - usergroup name -plgrp1 and choose admin access
           - select the group and  click on create user
           - download the .csv file
	- Policies
		   - click on policies, click on create policy, click on json and you can update and create policy 
             or from visual you can use like s3  add all like read,write,
             click on resource and you can add your specific resource
	- Roles 
           - For roles, if user wants to login to ec2 and acces file through s3 buckets. IAM role is required here
             - choose aws service, choose ec2, choose s3 fulladmin access
             - role name pl-ec2-s3-iam-role1
             - click on create role
             - now go to the ec2 instance dashboard, 

    - Access the s3 bucket through EC2
      - while creating EC2 instance Name
      - AMI
      - advanced details, IAM instance profile you should be seeing this role - pl-ec2-s3-iam-role1
         
	- Security Credentials 
	    - click on usee plappuser1, if you click on permission, you can see ppolicies
          adminstrator access,awscodebuildadmin access, aws code commit full access, 
          aawscodedeployfullaccess,awscodpipelinefullaccess, iamuserchangepasswword
        - you can click on security credentials, you can see MFA and assign MFA  to the user

    - Access reports :
        - if any user is not active for long they can be removed from the access gropu and it's a paid service

    - Billing and cost management home
       - cost summary
       - cost breakdown
       - bills
       - free tier
       - pricing caluclator - based on container services, monitoring services, database  services
         - workload estimate like if you say if you a customer is approaching us to implement devops, we can give the estimate manpower  analysisi
           but not the cloud service estimation it should be discussed with wendor and customer
    - Cost and usage analysis
    - aws well architectured tool
      

			
	- Associate / 
	
	
	- RBAC ::::
	
		Manager 		=> DevOps / Develop / Security / Storage / Networking 
		
		Lead 
		
		Associate 

-  EC2 Service
   - ec2 is one of the most popular of AWS offering
   - ec2 -elastic compute cloud- infrastructre as a service
   - it mainly consits in the capability of
        - renting virtual machine ec2
        - storing data on virtual dirves( ebs)
        - distributing load across machines( elb)
        - scaling the services using an auto - scaling group (ASG)
-  EC2 sizing and configuration
  - operating system(os) linux windows or mac os
  - how much compute power and cores (CPU)
  - how much random access memory (RAM)
  - how much storage space:  
       Network attached ( EBS and EFS)
       Hardware( ECE instance sotre)
  - network card: speed of the card public ip address
  - firewall rules: security grouop
  - bootstap  script( configure a first launch EC2 user data
- EC2 user data
  - it is possible to bootstrap our instances using an EC2 user data script 
  - bootstrapping means launching commands when a machine starts
  - that script is only run once at the instance first start
  - ec2 user data is used to automate boot tasks such as 
       - installing upates
       - installing software
       - downloading common files from the internet
       - anything you can think of
  - EC2 user data script runds with the root user
- Ec2 instance types- Overview
  you can use different tpes of ec2 instances that are optimised for different use cases
- AWS has the following naming convention
    m5.2* large
     m: instance class
     5: generalring
     2*large: size within the instance class
    m class- general purpose - t2
                - Great for a diversity of workloads such as webservers or cod repositories
                - balance between - compute, memory, networking
                
             compute optimized - c6gn
                - require for high performance
                - batch processing workloads
                - media transcoding
                - high performance webservers
                - hgih performance computing HPC
                - sicientfiic modelling  and machine learning

             memory optimized - R6g
               - for business intelligenece such as  memory datbases optimixed for BI
               - applications performing real time processsing of gbig unstructured data

             accelerated computing 
               - 
             storage optimixed
             HPC optimixed
             instance features
             measuring instance performance

 Instance      vcpu     Network performance   memory GIB
 t2.micro       1         low to moderate      1
 t2.xlarge      4          moderate            16 
 5d.4xlarge     16         upto 10 gbps        32
 r5.16xlarge    64          20 gbps            512
 m5.8xlarge     32           10 gbps           128


- Security groups
    - security groups are the fundamental of network security  in AWS
    - They control how traffic is allowed into or out of our ec2 instances
    - security groups only contain allow rules
    - security groups rules can reference by OP or by security group

    - can be attached to multiple instances
    - locked down to a region /VPC combination
    - does live outside the EC2 if traffic is blocked ec2 wont see it
    - it's good to maintain one separate security group for SSH access
    - if your application is not accssible (timeout) then it's a security group issue
    - if your application give a connection refused error then its an application error or it's not launched
    - all inbound traffice is blocked by defualt 
    - all outbound traffic is authorised by defualt 

Classic Ports to know
22 = ssh (secure shell) log inot a linux instance
21 = ftp (file transfer protocol) upload files into a file share
22=  sftp (secure file transfer protocol) upload files using gssh
80=  http (Acess unsecured websites)
443= https- (access secured websites)
3389= RDP(Remote desktop protocol) log inot windowns instance


Ec2 Instances Purchasing options
- on demand instances short workload, predictable pricing pay by second
- reserved( 1 and 3 yerrs)
   - resserved instances long workloads
   - convertible reserved instances - long workload with flexible instances
- savings plans (1 & 3 years) commitment to an amount of usage long wworkloads
- spot instances- short workloads chearp can lose instances( less reliable)
- dedicate hosts- book an entire physical server,control instance placements
- dedicated instances- no other customers willl shareyour hardware
- capacity reservations- reserve capacity in a sepcific AZ for any duration












