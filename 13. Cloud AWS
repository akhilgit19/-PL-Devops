Introduction to Cloud:
============================
   - Devops Projects:
      ---> Use this project in reusme
                - Banking/ Retails     ====> Phase 1 - ( Here you will be using defulat vpc, subnets)

      ---> AWS Cloud Services          =====> Phase 2 - ( Here you will create a dedicated vpc,subnets, routetables, intergetatway)
                                             within the private network you will deploy through jenkins and implement your services using kubernetes
                                             by  the help of load balancer.


#########################
Day 33 : 4th Sep. 2025
#########################

	AWS Solution Architect Associate Level!
=============================================	
	Introduction to Cloud :::
=============================================
		What is Cloud Computing?
=============================================
		- If you want to avail , servers ,databases ,storage,networking from internet instead of onpremsis

    why is cloud computing important?
=============================================
    - faster service provisioning
      dynamic scalability
      good reliablitiy
      cost effective 
      higher productivity 
      efficient performance
      high security

    Diffent Layers of cloud computing
=============================================
      Applications           Software as a serveice      applications

      programming            platform as a service       Programming
      environment                                        environment

      virtual Machine1        Infrascture as a service    Virtual Machine
                               servers



     Different Cloud Computing Service Modes
=============================================

 On premise             Infrasctureas a service           platform as a service      software as a service
===========            =========================          =====================       =======================
applications            applications                        applications              applications
data                    data                                 data                     data
runtime                 runtime                  ==========  runtime                  runtime
middleware              middleware                            middleware              middleware
o/s                     o/s                                   o/s                     o/s
virtualization          ==========virtualization              virtualization          virtualization
servers                           servers                     servers                 servers
storage                           storage                      storage                 storage
networking                        networking                   networking             networking




public cloud
private cloud
hybrid cloud
community cloud


AMS - AMAZON Web services
=============================================
- Benefits of AWS
   -  Easy to use
   -  scalable and provides high performance
   -  dominant market position
   -  cost efective
   -  reliable
   -  secure
   -  flexible
   -  can support large organization


AWS Services

       1. Compute - EC2, Amazone ElasticBeanstalk, Amazon lambda, Amazon scaling, Elastic load balancer
       2. Storage and content delivery - amazon ebs, amazon efs, amazon s3, amazon glacier,
                                       amazon storage gateway, amazon cloudfront
       3. Networking - amazon vpc, aws direct connect , amazon route s3
       4. database- amazon rds , amazon dyanmo db, amazon elasticcache, amazon redshift
       5. managment tools- amazon cloudwatch, aws cloud formation, aws cloud trail, aws trustadvisior
       6. security and identity - aws idently access management (IAM), aws key managemnt service(KMS)
       7. Application services- amazon ses , amazone sns, amazon sqs , amazon swf
       8. developer tools- codepipeline, code deploy, code build , code commit


 Services Comparision: AWS , AZURE   and GCP

  AMAZON AWS            MICROSOFT Azure        GCP
=========================================================
   S3                   Blog storage          storage
   EC2                  Virtual machines      compute engine
   ec2 container serv    container service     kubernetes engine
   elastic beanstalk     cloud service         app engine
   dynamodb              cosmos db              bigtable
   redshift              sql databse            bigquery
   lambda                azure functions        cloud functions
   dynamo                cosmos db              cloud datastore



AWS Global infrascture
==========================
- aws regions
    - aws has regions all around the world
    - names can be us-east-1 eu-west-3
    - a region is a cluster of data centers
    - most aws services are region scoped
   -  How to choose an aws regions
    1 compliance with data goverance and legal requirements: data never leaves a region without 
      your explict permission
    2 proximity to customers reduced  letency
    3 available services within a region: new servers and new features arent' available in every region
    4 pricing: pricing varies region to region and is transparent in the service pricing page


- aws availabitiy zones:
    - Eachi region has many availablity zones
       (usualyly 3 min is 3 max is 6)
     example ap-souteast-2a, ap-souteast-2b, ap-souteast-2c
    - each avaialbity zone is one or more discrete data centers with redundant powers
      networking and connectivity
    - they are separate from each other so that they are isolated from disasters
    - they are connected with high bandwidth, ultralow latency networking

- aws data centers
 
- aws edge locations/ points of presence
  - Amazon has 400+ points of presence (400 + edge locations & 10+ regional caches)
    in 90+ cities across 40+ countries
  - content is delivered to en uses with lower latency


		IAM Services
		- 
		EC2 Services 
		
		

		
Next :

	IAM Service Demo
	EC2 Service!
	
	
########################
Day 34 : 5th Sep. 2025
#########################		
	
	- IAM Services :

	https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html


    - IAM user and groups
      - IAM = Identy and access managmentl, global service
      - root account created by defulat shouln't be used or shared
      - users are people within organization and can be grouped
      - groups only contain users, not other groups
      - users dont have to belongs to a group and user can belong to multiple groups

    - IAM : Permission
      - users or groups can be assigned json documents called policies
      - These policies define the permission of the users
      - In AWS you apply the least privilege prinicple dont give more permission tha a user neede

    - IAM Policies structure
      - consists of 
         . versions: policy language version, always include 2012-10-17
         . id: an identifier for the policy 
         . statement: one or more individual statements
      - statements consits of
         . sid: and identifier for the statement
         . effect: wheather the statement allows or denies access 
         . prinicpal: account/users/role to which this policy applied to 
         . action: list of actions this policy allows or denies
         . resouce: list of resouces to which the actions applied to 
         . condition: conditions for when this policy is in effect

     - How can users access AWS.
         . To access AWS, you  have three options
           - AWS Managment console( Protected by  password + MFA)
           - AWS command line interface (CLI) protected by access keys
           - AWS software Developer Kit( SDK) for code protected  by access keys
         . Access keys are generated through the AWS console.
         . users manage their own access keys
         . Access keys are secret, just like a password, Dont share them
         . Access key id = username
         . secret accesskey = password

     - IAM: MFA device options in AWS (optional)

      - How can users access AWS

			- AWS Console 
			
			- AWS Cli 
			    https://github.com/aws/aws-cli
                https://docs.aws.amazon.com/cli/latest/userguide/cli_code_examples.html
			- AWS SDK
               - AWS software development kit( AWS SDK)
               - language speicfic API's ( set of libraries)
               - enables you to access and manage AWS services programmatically
               - embedded within your application
               - supports 
                      - SDK's( javascript, pythong, pHP NET, Ruby java, Go nodejs c++)
    - IAM Roles for services
       - Some AWS service will need to perform actions on your behalf
       - To do so we will assign permission to AWS services with IAM roles
       - Common roles 
           EC2 instance roles
           Lambda function roles
           roles for cloud formation

    
	- Create IAM User 
           - In aws console, Go to IAM, click on users, click on create user,username - plappuser1
           - choose (provide user access to the AWS Management console)
           - choose (i want to create an IAM user)
           - console password  choose custom password
           - choose ( user must create a new password a next sign)
           - click on next
           - In permissions options- attach policies direclty and you can choose admin access
           - or
	- Create User  Group 
           -  you can choose add user to group 
           - usergroup name -plgrp1 and choose admin access
           - select the group and  click on create user
           - download the .csv file
	- Policies
		   - click on policies, click on create policy, click on json and you can update and create policy 
             or from visual you can use like s3  add all like read,write,
             click on resource and you can add your specific resource
	- Roles 
           - For roles, if user wants to login to ec2 and acces file through s3 buckets. IAM role is required here
             - choose aws service, choose ec2, choose s3 fulladmin access
             - role name pl-ec2-s3-iam-role1
             - click on create role
             - now go to the ec2 instance dashboard, 

    - Access the s3 bucket through EC2
      - while creating EC2 instance Name
      - AMI
      - advanced details, IAM instance profile you should be seeing this role - pl-ec2-s3-iam-role1
         
	- Security Credentials 
	    - click on usee plappuser1, if you click on permission, you can see ppolicies
          adminstrator access,awscodebuildadmin access, aws code commit full access, 
          aawscodedeployfullaccess,awscodpipelinefullaccess, iamuserchangepasswword
        - you can click on security credentials, you can see MFA and assign MFA  to the user

    - Access reports :
        - if any user is not active for long they can be removed from the access gropu and it's a paid service

    - Billing and cost management home
       - cost summary
       - cost breakdown
       - bills
       - free tier
       - pricing caluclator - based on container services, monitoring services, database  services
         - workload estimate like if you say if you a customer is approaching us to implement devops, we can give the estimate manpower  analysisi
           but not the cloud service estimation it should be discussed with wendor and customer
    - Cost and usage analysis
    - aws well architectured tool
      

			
	- Associate / 
	
	
	- RBAC ::::
	
		Manager 		=> DevOps / Develop / Security / Storage / Networking 
		
		Lead 
		
		Associate 

-  EC2 Service
   - ec2 is one of the most popular of AWS offering
   - ec2 -elastic compute cloud- infrastructre as a service
   - it mainly consits in the capability of
        - renting virtual machine ec2
        - storing data on virtual dirves( ebs)
        - distributing load across machines( elb)
        - scaling the services using an auto - scaling group (ASG)
-  EC2 sizing and configuration
  - operating system(os) linux windows or mac os
  - how much compute power and cores (CPU)
  - how much random access memory (RAM)
  - how much storage space:  
       Network attached ( EBS and EFS)
       Hardware( ECE instance sotre)
  - network card: speed of the card public ip address
  - firewall rules: security grouop
  - bootstap  script( configure a first launch EC2 user data
- EC2 user data
  - it is possible to bootstrap our instances using an EC2 user data script 
  - bootstrapping means launching commands when a machine starts
  - that script is only run once at the instance first start
  - ec2 user data is used to automate boot tasks such as 
       - installing upates
       - installing software
       - downloading common files from the internet
       - anything you can think of
  - EC2 user data script runds with the root user
- Ec2 instance types- Overview
  you can use different tpes of ec2 instances that are optimised for different use cases
- AWS has the following naming convention
    m5.2* large
     m: instance class
     5: generalring
     2*large: size within the instance class
    m class- general purpose - t2
                - Great for a diversity of workloads such as webservers or cod repositories
                - balance between - compute, memory, networking
                
             compute optimized - c6gn
                - require for high performance
                - batch processing workloads
                - media transcoding
                - high performance webservers
                - hgih performance computing HPC
                - sicientfiic modelling  and machine learning

             memory optimized - R6g
               - for business intelligenece such as  memory datbases optimixed for BI
               - applications performing real time processsing of gbig unstructured data

             accelerated computing 
               - 
             storage optimixed
             HPC optimixed
             instance features
             measuring instance performance

 Instance      vcpu     Network performance   memory GIB
 t2.micro       1         low to moderate      1
 t2.xlarge      4          moderate            16 
 5d.4xlarge     16         upto 10 gbps        32
 r5.16xlarge    64          20 gbps            512
 m5.8xlarge     32           10 gbps           128


- Security groups
    - security groups are the fundamental of network security  in AWS
    - They control how traffic is allowed into or out of our ec2 instances
    - security groups only contain allow rules
    - security groups rules can reference by OP or by security group

    - can be attached to multiple instances
    - locked down to a region /VPC combination
    - does live outside the EC2 if traffic is blocked ec2 wont see it
    - it's good to maintain one separate security group for SSH access
    - if your application is not accssible (timeout) then it's a security group issue
    - if your application give a connection refused error then its an application error or it's not launched
    - all inbound traffice is blocked by defualt 
    - all outbound traffic is authorised by defualt 

Classic Ports to know
22 = ssh (secure shell) log inot a linux instance
21 = ftp (file transfer protocol) upload files into a file share
22=  sftp (secure file transfer protocol) upload files using gssh
80=  http (Acess unsecured websites)
443= https- (access secured websites)
3389= RDP(Remote desktop protocol) log inot windowns instance


Ec2 Instances Purchasing options
- on demand instances short workload, predictable pricing pay by second
- reserved( 1 and 3 yerrs)
   - resserved instances long workloads
   - convertible reserved instances - long workload with flexible instances
- savings plans (1 & 3 years) commitment to an amount of usage long wworkloads
- spot instances- short workloads chearp can lose instances( less reliable)
- dedicate hosts- book an entire physical server,control instance placements
- dedicated instances- no other customers willl shareyour hardware
- capacity reservations- reserve capacity in a sepcific AZ for any duration



#######################
Day 35 : 8th Sep. 2025
#######################

	EC2 Services!	

		VM - Jenkins_Server 

		AMI :	AMI contains the operating system, application server, and applications for your instance.
		 - Create an AMI and Copy to any target Region.
	     - select the instance, click on actions, click on image and templates
         - launch template name, template version , instance type, keypair, 
         - network setting
         - click on create image
         - image name - PL-BS-AMI-1
         - Reboot instance by defualt
         - instant volumes , Size -8
         - click on create image
         - In the images, you can see AMI's,
       Using AMI we can create EC2:
         - In ec2 create my AMI - PL-BS-AMI-1
         - launch test-server 1
         - instance type- t2 micro
         - keypair 
         - click on ec2 instance
       copy AMI
        - click on the ami, click on actions, click on copy ami
        -  ami copy  name -PL-BS-AMI-1
        - destination region  asia pacific (singapore)
        - choose copy tags

      Security groups
        - launch instance -
        - ami ubuntu
        - instance type t2.micro
        - key pair 
        - networksetting 
        - create security group - edi inbound rule 
        - custom tcp 8080 source allow all
        - type ssh , custom source allow all
      Allocate Elastic ip address
        - click on ec2 , click on elastic bip address
        - click on allocate elasti ip address
          - Publick IPv4 address pool
          - amaon pool of ipv4 address
          - network border group( choose your network availablitiy zone)
            ap-south-1
          - click on allocate
    placement group: for tightly coupled we use placement group

			OS -> Ubuntu 
			
		Server Templates ::::		
		- 
		Docker :::
		
			Containers				VM  
			
			Images 					AMI 
		
		
	EBS Volumes ::::
	
		- Elastic Block Store !
		- you can attach or dettach the volume or modify the volume
    snapshots
         - click on create snapshot
         - give the volume id
         - now click on create snapshot
         - select snapshot, click on actions, click on create volume from snapshot

     Loadbalancer
         Target group--- The request is sent to  target server uses round robindmethod


	EFS Volumes ::::
	    
	S3 ::::
	  - Amazon s3 allows people to store objects)(files) in buckets(directories)
      - buckets must have a globally unique name( acorss all regions all accounts)
      - buckets are defined at the region level
      - s3 looks like a global service but buckets are created in a region
      - Naming convention
           . No uppercase, No underscore
           . 3-63 characters long
           . not an ip
           . must start with lowercase letter or number
           . must not start with the prefix xn
           . must not end with the suffic -s3alia
	   - objects(files) have a key
       - the key is the full path
           . s3://my-bucket/my_file.txt
           . s3://my-bucket/my_folder/another_folder/my_file.txt
       - key is composed of prefix + object name
           . s3://my-bucket/my_folder/another_folder/myfile.txt
       - There's no concept of directories within buckets
       - Object values are the content of the body
           . Max object size is 5 TB ( 5000 TB)
           . If uploading more than 5 gb must use multi-part upload
       - Metadata( list of text key /value  pairs- system or user meta data)
       - tags
       - version ( if versioning is enabled)

    S3 Bucket Policies
     - JSON based policies
          . Resources: buckets and objects
          . effect: allow / deny
          . actions: set of api to allow or deny
          . principal: the account or user to apply the policy to
     - Use s3 bucket for policy to:
          . Grant public access to the bucket
          . force objects to be encrypted at upload
          . Grant access to another account( Cross account)

     Creation of bucket
      - click on create bucket 
      - bucket type - general purpose 
      - bucket name - ol-temp-bkt1
      - object ownership 
     Block public access setting for this bucket
      - disable block all public access 
      - acknowledge this 
      - bucket versioning - disable
      - tags
      - default encryption 
      - advanced settings 
         - disable 
      - Click on create bucket, now you can upload files to your bucket

    Amazon S3 Static Website Hosting
     - S3 can host static websites and have them  accessible on the internaet
     - the website URL will be ( depending on the region) 
        http://bucket-name.s3-website-aws-region.amazonaws.com
         or
        http://bucket-name.s3-website.aws-region.amazonaws.com
     - if you get a 403 forbidden error, make sure  the bucket policy allows public reads

     s3 - versioning
     - you can version your files in amazon s3
     - it is enabled at the bucket level
     - same key oeverwrite will change the version:1 ,2,3
     - it is best practice to version your buckets
        . protect against unintended deletes( ability to restore a version)
        . easy roll back to previous version
     - Notes:
         . Any file that is not versioned prior to enabling versioning will have version " null"
         . Suspending versioning does not delete the previous bversions

    s3 durabliity and avaialbility 
      Durability
          - high durability (999.9999 % ) of objects across multiple AZ
          - If you store 10,,000000 objects with amazon s3 you can on average  expect to incur a loss of a single object once eveery 100,000 years
          - same for all storage classed
      Avaialbility 
          - Measures how readily avaialbe a service is
          - varies depending on storage class
          - example s3 standard has 99.999% avaialbitliy = not avaiable 53 min  a year




      
	AWS CodeCommit ==> Distributed VCS in AWS.
	
	
	Use S3 Buckt to host static web appln. 


#######################
Day 36 : 9th Sep. 2025
#######################

	S3 
	
	Volumes 
	
	Dbase Services 
	
	Networking :
	
		VMs - dedicated VPC
		
		
	EC2 Instance -> AMI 
	
		-> Kubernetes / Jenkins / Ansible - AC / Target Nodes -> Provision
		
		-> Configure Kube_WN1 ->		


- launch ec2 instance
- PL- Webappserver
- AMI- amazon linux 2023 kernel -6.12 AMI
- Instance type t2 micro
- keypair
- networksetting -  
  - create security group 
  - allow ssh, http
- storage - 8 gb
- Advanced details
- UserData :
	
	#!/bin/bash
	yum update -y
	yum install -y httpd
	systemctl start httpd
	systemctl enable httpd
	echo "<h1>Hello! You accessing web server - $(hostname -f)</h1>" > /var/www/html/index.html
	
- launch the instance


Database services
- Databases- Aurora and RDS- click on create database
- instance cype db.rg.2x large 
- availablity and durability 
- Templates
   - production, dev/test, free tier
-

Migration services
-  Database Migration service

Aurora and RRD

Choosing the right databse:
 - we have a lot of managed databases on AWS to choose from 
 
questions to choose the right database based on your architecture:
 - Read-heavy, write-heavy or balanced workload? throughtput needs? will it?
   change, does it  need to scal or fluctuate during the data?
- how much data to store and for how long? will it grow? average object size?
  how are they accessed?
- data durability? source of truth for the data?
- latency requirements? concurerent users?
- data model? how ill you query the data? jjoins? structeured?
 semi-structured?
- strong schema? more flexibility? reporting? sear? RDSBMS/ NOSQL?
- License costs? switch to cloud native DB such as aurora?

Amazon RDS - Summary

- Manageed PostgreSQL/MQL/Oracle/SQL Server/ DB2 /MairaDB/ Custom
- Provisioned RDS Instant size and EBS volume type and size
- autoscaling capability for storage
- suppport for read replicas and multi az
- security through IAM security groups KMS, SSL in transit
- automated backup with point in time restore feature
- manual  DB snapshot for longer term recovery
- managed and scheduled mainteannce
- support for IAM authentication, integration with secrets amanagers
- RDS custom for access to and customizee the underlying instance


EBS Volume
-  An EBS( Elastic Block store) volume is a network drive you can  attache to your instances while they run
- it allows your instances to persist data, even  after their termination
- They can only be mounted to one instance at a time( at the  CCP leevel)
- They are bound to a specific availability zone

- Analogy: This of them as a network USB stick
- Free tier: 30 GB of free EBS storage oft type general purpose(SSD) or magnetic per month

EBS Volume
- Its a network drive ( not a physi al dirve)
   . it uses the network to communicate the isntance, which means there mimght be a bit of letency
   . it can be detached from an EC2 isntance and attached to another one quickly
- it's located to an avaialbitliy zone( AZ)
   . An EBS volume in us-east-ia cannot be attached to us-east-1b
   . to move a volume across you first need to snapshotit
- Have a provisioned capacity( size in GBS and IOPS)
   . You get billed for all provisioned capacity
   . you can increase the capacity of the drive over time
- you can create a snapshot of the volume
  EBS Snapshots:
 - Make a backup(snapshot) of your EBS volume at a  point in a time
 - No necessary to detach volume to do snapshot but recommened
 - can copy snapshots across  AZ or region

Note:
One EBS volume can be attached  to 16 EC2 instances


 EBS Encryption:
 - When you create an encrypted  EBS volume you get the folowing:
   . Data at rest is encrypted inside the volume
   . All the data in fligh moving between the instnace and the  volume is encrypted
   . all snapshots are encrypted
   . all volumes created from the snapshot
 - Encryption and decryption are handled transparently
 - Encrypting has a minimal impact on latency
 - EBS Encryption leverages keys from KMS( AWS-256)
 - copying an unencrypted snapshot allows encryption
 - snapshots of encrypted volumes are encrypted

Amazon EFS Elastic File system
- Managed NFS( network file system) that can be mounted on many EC2
- EFS works with EC2 instances in multi a-z
- Highly available, scable, expensive( 3xgp2 
  pay per use

- click on EFS 
- name 
- VPC 
- Recommeneded settings
   
	192.168.0.0/16	==> Home 
	
	172.0.0.0/16	==> AWS Default VPC 
	
	10.0.0.0/16		==> For any Big Network
	
	Networking :
	
		VMs - dedicated VPC
		Subnet :
			- Public Subnet & Private Subnet
			
			EC2 Instance using IAM Role and S3
			
		Route Table 
		Route Table Asso.
		Internet Gateway

AWS Networking
------------------
docs.aws.amazon.com

Amazon VPC


Traditional On premisis network
=================================
 Internet

-  Router

Switch       Switch
LANA          LANB

A    B            C

- Terminal a to b if you want to communte , The communication will be done thru lan network
- Now if you want to connect terminal b in lan a to terminal c in Lan b is done thr switches
- switches acts as a single point of communication to the LAN
- if you have more lans , switch acts as an interface between lan and routed
- Router distributes the routing request from one switch to another switch


Physical Network:
-
Router

hub  or switch

terminals


AWS VPC

subnet A subnet B
EC2  Router   EC2
AZ1          AZ2

- How do i compare physical network to AWS VPC(clOUD)
- lAN network can be compared to subnet
- workstations can be compared to ec2, So a subnet can have n number of ec2 instances
- In phsyical network, lan is connectied to swtich which conummincates to another lan via switch 
- In AWS Vpc , routers  are used to route the request from one aubnet to another subnet
- In aws vpc, application is enabled to the intergateway which is exposed to external network
- The router and internetgateway is attached through routetable association
- subnets can be public and private subnets, public subnets are exposed to internetgateway
- Example 3 teir application architecture, user application can be hosted in public subnet
- application and database can be attached in private subnet
- Through NACL, we can enable firewall protection to subnets
- Security Group  access the EC2  instance protection 


1 Region-= Multiple Availability Zones:
Now AWS in 32 region and 102 availability zones

VPC sc0pe with repsect to AWS account,region and AZ;
=====================================================

- once we create an account we will choose regions like mumbai tokyou or n virginia
- once we choose the region we will prepare VPC in respective region level
- each region as availability xones az1 az2 az3


                aws account 
                        |
------------------------------------------------------
  |                     |                          |
Mumbai               tokyo                   n virginia
region1             region2                  region3
 
vpc                  vpc                        vpc   
                     vpc                        vpc   
                     vpc   


az1 az2 az3        az1 az2 az3 az4              az1 az2 az3 az4 az5 az6


- I can create a VPC and link all the 3 avaialbility zones. scope of your services
  will be account level ,region level and vpc level

                aws account IAM route53
                        |
------------------------------------------------------
  |                     |                          |
Mumbai               tokyo                   n virginia
region1             region2                  region3
 
vpc elb                 vpc                        vpc   
ec2 rds               vpc                          vpc   
sub sub               vpc   


az1 az2 az3        az1 az2 az3 az4              az1 az2 az3 az4 az5 az6


             
AWS Services scope with respect to VPC
- if you observe, once you create an account at account level , IAM, route53 willbe in global service region
- similarly if you create an any s3 bucket or dynamodb will be in region level
- same way if you create an vpc or elb can be associate with subnets
- in each and every subnets we will deply our ec2 rds rousources
- subnets is process of spliting vpc into various partitions
- once i splits into multiple subnets we can host multiple resources
- we can maintain subnets for ec2, rds resourcess
-  there is an option to avail multiple az to vpc

VPC building blocks Architecture

- CIDR
- subnets
- routetables
- security groups
- network acl
- internet gateway
- vpn Gateway
- Domain name server
                             internelt

| -----------------------------igw--------------------------------------------------
|  |----------------------------------------------cidr 10.0.0.0/16---------------------------------
|  |vpc           
|  |  ---------------             -------------------
|  |  |              |             |              |
|  |  |   Subnet A   |             |  Subnet B    | 
|  |  |              |             |              |
|  |  |   EC2        |  Routeer    |    RDS       |
|  |  |              |             |              |
|  |  |              |             |              |
|  |  |              |             |              |
|  |  ----------------             ------------------
|  |  CIDR 10.0.0.0/24             CIDR 10.0.1.0/24
|  |-------------------------------------------------------------------------------
|   availabiy zone 1               availabitliy zone 2
-------------------------------------------------------------------------------
vgw
^
| vpn or direct connect 
|
CGW
^
|
Data Center 

-------------------------------------------------------------------------------
- So once we create a VPC we will be creating a subnet
- while creating subnet CIDR range is imp parameter, it is used to assign the IP address
- CIDR, Class less interdomain routing
- Example, using CIDR we can able to choose or assign the ip address to subnet level
- if you create a vpc you can able to set the CIDR range 10.0.0.0/16
- /16 going to decides how many ip address can be set to this VPC
- same thing can be looked for subnet level
- Once subnet is defined if you maintain any communication to another subnet
  is by router through routetables
- Security groups decides incoming and outgoing traffic of ec2 leavl
- Network acl maintains firewal at subnet level  
- we cannot rely on ip address we rely on Domain name system, ;let say im running  a web application,
  i dont need to enter my ip address i can easly access by DNS
- VPN gateway provided secured encryption communication 
- some of applications are in onpremisis i want the data to be used in cloud,
  how my onpremisis can connect to cloud is VP or dirrect connect .
- on premissing we will have Custermer gateway and in cloud we will have virtual gateway


Ip addressing Basics
- When ever users enters website address in browser, as soon as they hit the site, The dns
  server which check for entries of the domain name and associate IP address and routes to the target webeserver
-  DSN is just for end users understanding but actual communication is done by ip'
-  what if dns is not having any entry, it will go to the next level











